(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{689:function(i,e,t){"use strict";t.r(e);var l=t(7),n=Object(l.a)({},(function(){var i=this,e=i.$createElement,t=i._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[t("div",{staticClass:"table-box"},[t("table",{attrs:{border:"1",cellpadding:"1",cellspacing:"1"}},[t("tbody",[t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("write(final File file, final CharSequence data, final Charset encoding)")]),i._v(" "),t("p",[i._v("write(final File file, final CharSequence data, final Charset encoding, final boolean append)")]),i._v(" "),t("p",[i._v(" write(final File file, final CharSequence data, final String encoding)")]),i._v(" "),t("p",[i._v("write(final File file, final CharSequence data, final String encoding, final boolean append)")])]),t("td",[t("p",[i._v("将字符序列写入到文件")]),i._v(" "),t("p",[i._v("file：待写入的文件，路径不存在时，自动新建；")]),i._v(" "),t("p",[i._v("data：写入的字节内容；")]),i._v(" "),t("p",[i._v("append：是否追加；")]),i._v(" "),t("p",[i._v("encoding：文件内容编码，"),t("span",{staticStyle:{color:"#ff0000"}},[i._v("这在网络通信时防止中文乱码非常有用。")])])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("writeByteArrayToFile(final File file, final byte[] data)")]),i._v(" "),t("p",[i._v("writeByteArrayToFile(final File file, final byte[] data, final boolean append)")]),i._v(" "),t("p",[i._v("writeByteArrayToFile(final File file, final byte[] data, final int off, final int len)")]),i._v(" "),t("p",[i._v("writeByteArrayToFile(final File file, final byte[] data, final int off, final int len,final boolean append)")])]),t("td",[t("p",[i._v("将字节数组写入到文件")]),i._v(" "),t("p",[i._v("file：待写入的文件，路径不存在时，自动新建；data：写入的字节内容；")]),i._v(" "),t("p",[i._v("append：是否追加；off：字节数组写入的起始位置；lem：写入的长度")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("writeLines(final File file, final Collection<?> lines)")]),i._v(" "),t("p",[i._v("writeLines(final File file, final Collection<?> lines, final boolean append)")]),i._v(" "),t("p",[i._v("writeLines(final File file, final Collection<?> lines, final String lineEnding)")]),i._v(" "),t("p",[i._v("writeLines(final File file, final Collection<?> lines, final String lineEnding,final boolean append)")]),i._v(" "),t("p",[i._v("writeLines(final File file, final String encoding, final Collection<?> lines)")]),i._v(" "),t("p",[i._v("writeLines(final File file, final String encoding, final Collection<?> lines,final boolean append)")]),i._v(" "),t("p",[i._v("writeLines(final File file, final String encoding, final Collection<?> lines,final String lineEnding)")]),i._v(" "),t("p",[i._v("writeLines(final File file, final String encoding, final Collection<?> lines,final String lineEnding, final boolean append)")])]),t("td",[t("p",[i._v("将集合中的内容一次性写入文件")]),i._v(" "),t("p",[i._v("file：待写入的文件，路径不存在时，自动新建；")]),i._v(" "),t("p",[i._v("lines：要写入的行，null 表示插入空行")]),i._v(" "),t("p",[i._v("append：内容是否追加")]),i._v(" "),t("p",[i._v("lineEnding：要使用的行分隔符，null 表示使用系统默认值")]),i._v(" "),t("p",[i._v("encoding：要使用的编码，{@code null}表示平台默认值")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("writeStringToFile(final File file, final String data, final Charset encoding)")]),i._v(" "),t("p",[i._v("writeStringToFile(final File file, final String data, final Charset encoding,final boolean append)")]),i._v(" "),t("p",[i._v("writeStringToFile(final File file, final String data, final String encoding)")]),i._v(" "),t("p",[i._v("writeStringToFile(final File file, final String data, final String encoding,final boolean append)")])]),t("td",[t("p",[i._v("将字符串写入到文件")]),i._v(" "),t("p",[i._v("file：待写入的文件，路径不存在时，自动新建；")]),i._v(" "),t("p",[i._v("data：写入的字节内容；")]),i._v(" "),t("p",[i._v("append：是否追加；")]),i._v(" "),t("p",[i._v("encoding：文件内容编码")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[i._v("byte[] readFileToByteArray(final File file)")]),t("td",[i._v("将文件内容读入字节数组。文件始终处于关闭状态。")])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("String readFileToString(final File file, final String encoding)")]),i._v(" "),t("p",[i._v("String readFileToString(final File file, final Charset encoding)")]),i._v(" "),t("p",[i._v("String readFileToString(final File file)")])]),t("td",[t("p",[i._v("将文件的内容读入字符串。文件始终处于关闭状态。")]),i._v(" "),t("p",[i._v(" file：要读取的文件，不能是 null")]),i._v(" "),t("p",[i._v("encoding:要使用的编码，null表示使用平台默认值")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("List<String> readLines(final File file, final Charset encoding)")]),i._v(" "),t("p",[i._v("List<String> readLines(final File file, final String encoding)")])]),t("td",[t("p",[i._v("逐行读取文件内容到字符串列表。文件始终处于关闭状态。")]),i._v(" "),t("p",[i._v(" file：要读取的文件，不能是 null")]),i._v(" "),t("p",[i._v("encoding:要使用的编码，null表示使用平台默认值")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("LineIterator lineIterator(final File file)")]),i._v(" "),t("p",[i._v("LineIterator lineIterator(final File file, final String encoding)")])]),t("td",[t("p",[i._v("为文件打开一个 InputStream 的行迭代器，完成迭代器之后，应该关闭流以释放内部资源。")]),i._v(" "),t("p",[i._v("LineIterator implements Iterator：可以很方便的一行一行读取文件内容")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("copyDirectory(final File srcDir, final File destDir)")]),i._v(" "),t("p",[i._v("copyDirectory(final File srcDir, final File destDir,final boolean preserveFileDate)")]),i._v(" "),t("p",[i._v("copyDirectory(final File srcDir, final File destDir,final FileFilter filter)")]),i._v(" "),t("p",[i._v("copyDirectory(final File srcDir, final File destDir,final FileFilter filter, final boolean preserveFileDate)")])]),t("td",[t("p",[i._v("将指定目录下所有子孙目录和文件复制到指定的目标目录下，如果目标目录不存在，则创建该目录。如果目标目录确实存在，则此方法将源目录与目标目录合并，源目录优先。"),t("span",{staticStyle:{color:"#f33b45"}},[i._v("注意只能是目录，如果是文件则异常。")])]),i._v(" "),t("p",[i._v("srcDir：源目录，不能为 null")]),i._v(" "),t("p",[i._v("destDir：目标目录，不能为 null")]),i._v(" "),t("p",[i._v("preserveFileDate：副本的文件日期是否与原件相同")]),i._v(" "),t("p",[i._v("filter：要应用的筛选器，即可以细粒度的控制复制哪些文件或者目录，null 表示复制所有目录和文件")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("copyFile(final File srcFile, final File destFile)")]),i._v(" "),t("p",[i._v("copyFile(final File srcFile, final File destFile,final boolean preserveFileDate)")]),i._v(" "),t("p",[i._v("copyFile(final File input, final OutputStream output)")])]),t("td",[t("p",[i._v("此方法将指定源文件的内容复制到指定的目标文件，如果目标文件不存在，则会创建包含目标文件的目录，如果目标文件存在，则此方法将覆盖它。")]),i._v(" "),t("p",[i._v("srcFile：源文件，不能为 null")]),i._v(" "),t("p",[i._v("destFile：目标文件，，不能为 null")]),i._v(" "),t("p",[i._v("preserveFileDate：副本的文件日期是否与原件相同")]),i._v(" "),t("p",[i._v("output：将文件复制到字节输出流，方法在内部使用缓冲输入。")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("copyFileToDirectory(final File srcFile, final File destDir)")]),i._v(" "),t("p",[i._v("copyFileToDirectory(final File srcFile, final File destDir, final boolean preserveFileDate)")])]),t("td",[t("p",[i._v("将指定源文件的内容复制到指定目标目录中同名的文件中。如果目标目录不存在，则创建该目录。如果目标文件存在，则此方法将覆盖它。")]),i._v(" "),t("p",[i._v("srcFile：源文件，不能为 null")]),i._v(" "),t("p",[i._v("destDir：目标目录，不能为 null")]),i._v(" "),t("p",[i._v("preserveFileDate：副本的文件日期是否与原件相同")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("copyInputStreamToFile(final InputStream source, final File destination)")])]),t("td",[i._v("将字节输入流复制到目标文件中，不存在时自动创建")])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("copyToDirectory(final File src, final File destDir)")]),i._v(" "),t("p",[i._v("copyToDirectory(final Iterable<File> srcs, final File destDir)")])]),t("td",[t("p",[i._v("将源文件或目录及其所有内容复制到指定目标目录中同名的目录中。如果目标目录不存在，则创建该目录。如果目标目录确实存在，则此方法将源目录与目标目录合并，源目录优先。")]),i._v(" "),t("p",[i._v("src：源文件或者目录")]),i._v(" "),t("p",[i._v("destDir：目标目录，不能为 null")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("copyToFile(final InputStream source, final File destination)")])]),t("td",[t("p",[i._v("将字节输入流复制打目标文件中，如果目标目录不存在，则将创建该目录。如果目标已存在，则将覆盖该目标。")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("copyURLToFile(final URL source, final File destination)")]),i._v(" "),t("p",[i._v("copyURLToFile(final URL source, final File destination,final int connectionTimeout, final int readTimeout)")])]),t("td",[t("p",[i._v("将 URL 网络资源复制到目标文件中，可以用于下载，未设置超时时间时，可能出现永久阻塞")]),i._v(" "),t("p",[i._v("connectionTimeout：连接超时时间，单位毫秒")]),i._v(" "),t("p",[i._v("readTimeout：读取超时时间，单位毫秒")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("deleteDirectory(final File directory)")])]),t("td",[i._v("递归删除目录。注意只能是目录，如果是文件，则异常。")])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[i._v("deleteQuietly(final File file)")]),t("td",[i._v("安全删除文件或者递归删除目录，不会抛出任何异常。")])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("forceDelete(final File file)")])]),t("td",[i._v("强制删除文件或者递归删除目录")])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("forceMkdir(final File directory)")])]),t("td",[i._v("生成一个目录，包括任何必需但不存在的父目录。如果已存在具有指定名称的文件，但它不是目录，则会引发IOException。如果目录无法创建（或不存在），则抛出IOException。")])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[i._v("moveDirectory(final File srcDir, final File destDir)")]),t("td",[t("p",[i._v("移动目录。当目标目录在另一个文件系统上时，执行“复制并删除”。")]),i._v(" "),t("p",[i._v("srcDi r要移动的目录")]),i._v(" "),t("p",[i._v(" destDir 目标目录")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[i._v("moveDirectoryToDirectory(final File src, final File destDir, final boolean createDestDir)")]),t("td",[t("p",[i._v("将目录移动到另一个目录。")]),i._v(" "),t("p",[i._v("*将目录移动到另一个目录。")]),i._v(" "),t("p",[i._v("*@param src要移动的文件")]),i._v(" "),t("p",[i._v("*@param destDir目标文件")]),i._v(" "),t("p",[i._v("*@param createDestDir如果为true，则创建目标目录，否则如果为false，则抛出IOException")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("moveFile(final File srcFile, final File destFile)")])]),t("td",[t("p",[i._v("移动文件。当目标文件位于另一个文件系统上时，请执行“复制并删除”。")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[i._v("moveFileToDirectory(final File srcFile, final File destDir, final boolean createDestDir)")]),t("td",[i._v("将文件移动到目录。")])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[i._v("moveToDirectory(final File src, final File destDir, final boolean createDestDir)")]),t("td",[t("p",[i._v("将文件或目录移动到目标目录。")]),i._v(" "),t("p",[i._v("*当目标位于另一个文件系统上时，请执行“复制并删除”。")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[i._v("forceMkdirParent(final File file)")]),t("td",[i._v("为给定文件生成任何必需但不存在的父目录。如果无法创建父目录，则引发IOException。")])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("File getFile(final File directory, final String... names)")]),i._v(" "),t("p",[i._v("File getFile(final String... names)")])]),t("td",[t("p",[i._v("获取文件对象")]),i._v(" "),t("p",[i._v("directory：父目录")]),i._v(" "),t("p",[i._v("names：子孙目录名称")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("File getTempDirectory()")]),i._v(" "),t("p",[i._v("String getTempDirectoryPath()")])]),t("td",[t("p",[i._v('返回系统临时目录。底层就是 System.getProperty("java.io.tmpdir")')])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("File getUserDirectory()")]),i._v(" "),t("p",[i._v("String getUserDirectoryPath()")])]),t("td",[i._v('返回用户的主目录，底层就是 System.getProperty("user.home")')])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("boolean isFileNewer(final File file, final Date date)")]),i._v(" "),t("p",[i._v("boolean isFileNewer(final File file, final File reference)")]),i._v(" "),t("p",[i._v("boolean isFileNewer(final File file, final long timeMillis)")])]),t("td",[i._v("测试指定文件的最后修改时间是否在指定时间之后，底层是 file.lastModified() > timeMillis")])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("boolean isFileNewer(final File file, final Date date)")]),i._v(" "),t("p",[i._v("boolean isFileNewer(final File file, final File reference)")]),i._v(" "),t("p",[i._v("boolean isFileNewer(final File file, final long timeMillis)")])]),t("td",[i._v("测试指定文件的最后修改时间是否在指定时间之前，底层是 file.lastModified() < timeMillis")])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("long sizeOf(final File file)")]),i._v(" "),t("p",[i._v("BigInteger sizeOfAsBigInteger(final File file)")])]),t("td",[t("p",[i._v("返回指定文件或目录的大小。如果提供的{@link File}是一个常规文件，则返回该文件的长度。如果参数是目录，则递归计算目录的大小。如果某个目录或子目录受到安全限制，则不会包括其大小。")]),i._v(" "),t("p",[i._v("请注意，不会检测到溢出，如果发生溢出，则返回值可能为负。")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("long sizeOfDirectory(final File directory)")]),i._v(" "),t("p",[i._v("BigInteger sizeOfDirectoryAsBigInteger(final File directory)")])]),t("td",[t("p",[i._v("递归计算目录的大小（所有文件的长度之和）。sizeOfDirectory 只统计目录的大小，单位为 字节，如果是文件则报错。")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("String byteCountToDisplaySize(final long size)")]),i._v(" "),t("p",[i._v("String byteCountToDisplaySize(final BigInteger size)")])]),t("td",[i._v("将文件字节大小转为可视化的 KB、MB、GB 等形式的字符串，一共有：bytes、KB、MB、GB、TB、PB、EB.")])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[i._v("boolean contentEquals(final File file1, final File file2)")]),t("td",[t("p",[i._v("比较两个文件的内容以确定它们是否相等。（注意只能是文件，如果是目录，则异常）")]),i._v(" "),t("p",[i._v("此方法检查两个文件的长度是否不同，或者它们是否指向同一个文件，然后对内容进行逐字节比较。")]),i._v(" "),t("p",[i._v("如果文件的内容相等或两者都不存在，则为true；否则为false")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[i._v("File[] convertFileCollectionToFileArray(final Collection<File> files)")]),t("td",[i._v("将文件集合转为文件数组，底层就是:files.toArray(new File[files.size()]);")])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("Collection<File> listFiles(final File directory, final String[] extensions, final boolean recursive)")]),i._v(" "),t("p",[i._v("Collection<File> listFiles(final File directory, final IOFileFilter fileFilter, final IOFileFilter dirFilter)")])]),t("td",[t("p",[i._v("查找给定目录（及其子目录）中与扩展名数组匹配的文件。")]),i._v(" "),t("p",[i._v(" directory 要搜索的目录")]),i._v(" "),t("p",[i._v(" extensions：要过滤的扩展数组，例如{“java”、“xml”}，为 null，返回所有文件。")]),i._v(" "),t("p",[i._v(" ecursive：true 表示搜索所有子目录")]),i._v(" "),t("p",[i._v("fileFilter：文件过滤器，IOFileFilter 是一个接口，常用的实现类有：SuffixFileFilter(文件后缀过滤器)、PrefixFileFilter(文件前缀过滤器)、TrueFileFilter(总是返回true的文件过滤器)、FalseFileFilter(总是返回false的文件过滤器)")]),i._v(" "),t("p",[i._v("dirFilter：与上面同理")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("FileInputStream openInputStream(final File file)")])]),t("td",[t("p",[i._v("为指定文件打开 FileInputStream，提供比简单调用new FileInputStream（file更好的错误消息。在方法结束时，要么成功打开流，要么抛出异常。")]),i._v(" "),t("p",[i._v("*如果文件不存在，则引发异常。")]),i._v(" "),t("p",[i._v("*如果文件对象存在但是一个目录，则引发异常。")]),i._v(" "),t("p",[i._v("*如果文件存在但无法读取，则引发异常。")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("FileOutputStream openOutputStream(final File file)")]),i._v(" "),t("p",[i._v("FileOutputStream openOutputStream(final File file, final boolean append)")])]),t("td",[t("p",[i._v("打开指定文件的{@link FileOutputStream}，检查并创建父目录（如果不存在）。在方法结束时，要么成功打开流，要么抛出异常。")]),i._v(" "),t("p",[i._v("*如果父目录不存在，将创建它。")]),i._v(" "),t("p",[i._v("*如果文件不存在，将创建该文件。")]),i._v(" "),t("p",[i._v("*如果文件对象存在但是一个目录，则引发异常。")]),i._v(" "),t("p",[i._v("*如果文件存在但无法写入，则引发异常。")]),i._v(" "),t("p",[i._v("*如果无法创建父目录，则引发异常。")])])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[t("p",[i._v("File toFile(final URL url)")]),i._v(" "),t("p",[i._v("File[] toFiles(final URL[] urls)")])]),t("td",[i._v("将 URL 转为 File 对象，注意只能对本地文件生成的 URL 才有效，对网络上的 URL 直接返回 null.")])]),t("tr",[t("td",{staticStyle:{width:"616px"}},[i._v("URL[] toURLs(final File[] files)")]),t("td",[i._v("将 File 对象转为 URL 对象。")])])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);