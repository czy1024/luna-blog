(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{829:function(t,a,s){"use strict";s.r(a);var r=s(7),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"java的bin等目录说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java的bin等目录说明"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("Java的bin等目录说明")])]),t._v(" "),s("ul",[s("li",[t._v("**javac：**Java编译器，将Java源代码换成字节代")]),t._v(" "),s("li",[t._v("**java：**Java解释器，直接从类文件执行Java应用程序代码")]),t._v(" "),s("li",[t._v("**appletviewer(小程序浏览器)：**一种执行HTML文件上的Java小程序类的Java浏览器")]),t._v(" "),s("li",[t._v("**javadoc：**根据Java源代码及其说明语句生成的HTML文档")]),t._v(" "),s("li",[t._v("**jdb：**Java调试器，可以逐行地执行程序、设置断点和检查变量")]),t._v(" "),s("li",[t._v("**javah：**产生可以调用Java过程的C过程，或建立能被Java程序调用的C过程的头文件")]),t._v(" "),s("li",[t._v("**Javap：**Java反汇编器，显示编译类文件中的可访问功能和数据，同时显示字节代码含义")]),t._v(" "),s("li",[t._v("**jar：**多用途的存档及压缩工具，是个java应用程序，可将多个文件合并为单个JAR归档文件。")]),t._v(" "),s("li",[s("strong",[t._v("htmlConverter")]),t._v("——命令转换工具。")]),t._v(" "),s("li",[s("strong",[t._v("native2ascii")]),t._v("——将含有不是Unicode或Latinl字符的的文件转换为Unicode编码字符的文件。")]),t._v(" "),s("li",[s("strong",[t._v("serialver")]),t._v('——返回serialverUID。语法：serialver [show] 命令选项show是用来显示一个简单的界面。输入完整的类名按Enter键或"显示"按钮，可显示serialverUID。')])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("补充详细：\n**javac.exe**\n\n用法：javac "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("源文件"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n可能的选项包括：\n-g 生成所有调试信息\n-g:none 生成无调试信息\n-g:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("lines,vars,source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 生成只有部分调试信息\n-O 优化；可能妨碍调试或者增大类文件\n-nowarn 生成无警告\n-verbose 输出关于编译器正在做的信息\n-deprecation 输出使用了不鼓励使用的API的源程序位置\n-classpath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("路径"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 指定用户类文件的位置\n-sourcepath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("路径"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 指定输入源文件的位置\n-bootclasspath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("路径"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 覆盖自举类文件的位置\n-extdirs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("目录"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("多个"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 覆盖安装的扩展类的位置\n-d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("目录"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 指定输出类文件的位置\n-encoding "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("编码"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 指定源文件中所用的字符集编码\n-target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("版本"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 生成指定虚拟机版本的类文件\n-help Print a synopsis of standard options\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("**appletviewer.exe**\n\n用法：appletviewer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" url\n\n其中，"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 包括：\n-debug 在 Java 调试器中启动 applet 小程序查看器\n-encoding "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("encoding"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 指定由 HTML 文件使用的字符编码\n-J"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("runtime flag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 向 Java 解释器传递参数\n\n-J 选项不是标准选项，如有更改，不另行通知。\n")])])]),s("p",[t._v("====================")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("**jar.exe**\n\n用法：jar "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ctxu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("vfm0M"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("jar-文件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("manifest-文件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-C 目录"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 文件名 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n选项：\n-c 创建新的存档\n-t 列出存档内容的列表\n-x 展开存档中的命名的（或所有的〕文件\n-u 更新已存在的存档\n-v 生成详细输出到标准输出上\n-f 指定存档文件名\n-m 包含来自标明文件的标明信息\n-0 只存储方式；未用ZIP压缩格式\n-M 不产生所有项的清单（manifest〕文件\n-i 为指定的jar文件产生索引信息\n-C 改变到指定的目录，并且包含下列文件：\n如果一个文件名是一个目录，它将被递归处理。\n清单（manifest〕文件名和存档文件名都需要被指定，按"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'m'")]),t._v(" 和 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f'")]),t._v("标志指定的相同顺序。\n示例1：将两个class文件存档到一个名为 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'classes.jar'")]),t._v(" 的存档文件中：\njar cvf classes.jar Foo.class Bar.class\n示例2：用一个存在的清单（manifest）文件 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mymanifest'")]),t._v(" 将 foo/ 目录下的所有\n文件存档到一个名为 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'classes.jar'")]),t._v(" 的存档文件中：\njar cvfm classes.jar mymanifest -C foo/ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("**javadoc.exe**\n\n用法：javadoc "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("packagenames"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sourcefiles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("classnames"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@files"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n-overview "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 读取 HTML 格式的概述文档\n-public 仅显示 public 类和成员\n-protected 显示 protected/public 类和成员（缺省）\n-package 显示 package/protected/public 类和成员\n-private 显示所有类和成员\n-help 显示命令行选项\n-doclet "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("class"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 通过候选 doclet 生成输出\n-docletpath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 指定 doclet 类文件的查找位置\n-sourcepath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pathlist"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 指定源文件的查找位置\n-classpath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pathlist"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 指定用户类文件的查找位置\n-exclude "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pkglist"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Specify a list of packages to exclude\n-subpackages "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("subpkglist"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Specify subpackages to recursively load\n-breakiterator Compute 1st sentence with BreakIterator\n-bootclasspath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pathlist"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 覆盖自举类加载器所加载的类文件的位置\n-source "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("release"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Provide "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" compatibility with specified release\n-extdirs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dirlist"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 覆盖已安装的扩展的位置\n-verbose 有关 Javadoc 所做工作的输出信息\n-locale "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 所用的 Locale，例如 en_US 或 en_US_WIN\n-encoding "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 源文件编码名称\n-J"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("flag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 将 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("flag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 直接传给运行时系统\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("由标准 doclet 提供：\n-d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("directory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 输出文件的目标目录\n-use 创建类和包的用法页\n-version 包含 @version 段\n-author 包含 @author 段\n-docfilessubdirs Recursively copy doc-file subdirectories\n-splitindex 将索引分为每个字母对应一个文件\n-windowtitle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 文档的浏览器窗口标题\n-doctitle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html-code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 包含包索引页（首页）的标题\n-header "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html-code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 包含每一页的页眉文本\n-footer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html-code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 包含每一页的页脚文本\n-bottom "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html-code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 包含每一页的页底文本\n-link "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Create links to javadoc output at "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n-linkoffline "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" Link to docs at "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" using package list at "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v("\n-excludedocfilessubdir "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" Exclude any doc-files subdirectories with given name.\n-group "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" Group specified packages together "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" overview page\n-nocomment Supress description and tags, generate only declarations.\n-nodeprecated 不包含 @deprecated 信息\n-noqualifier "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". Exclude the list of qualifiers from the output.\n-nosince Do not include @since information\n-nodeprecatedlist 不生成不鼓励使用的列表\n-notree 不生成类层次\n-noindex 不生成索引\n-nohelp 不生成帮助链接\n-nonavbar 不生成导航栏\n-quiet Do not display status messages to "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("screen")]),t._v("\n-serialwarn Generate warning about @serial tag\n-tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("locations"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Specify single argument custom tags\n-taglet The fully qualified name of Taglet to register\n-tagletpath The path to Taglets\n-charset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("charset"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Charset "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" cross-platform viewing of generated documentation.\n-helpfile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 包含帮助链接功能链接到目标的文件\n-linksource Generate "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" HTML\n-stylesheetfile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 改变所生成文档的样式的文件\n-docencoding "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 输出编码名称\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v(" **javah.exe**\n\n用法：javah "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("classes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n其中 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 包括：\n\n-help 打印该帮助信息\n-classpath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 类的加载路径\n-bootclasspath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 自举类的加载路径\n-d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 输出目录\n-o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 输出文件（仅能使用 -d 或 -o 之一）\n-jni 生成 JNI 风格的头文件（缺省）\n-old 生成 JDK1.0 风格的头文件\n-stubs 生成 stubs 文件\n-version 打印版本信息\n-verbose 输出有关本命令所做工作的信息\n-force 始终写输出文件\n\n指定 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("classes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 时必须使用全名（例如 java.lang.Object）。\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("**javaw.exe**\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\nHtmlConverter.exe\n\n用法：HtmlConverter "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-option1 value1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-option2 value2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-simulate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filespecs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n其中，选项包括：\n\n-source: 获取源文件的路径。 缺省值： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("userdir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n-dest: 写入已转换文件的路径。 缺省值： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("userdir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n-backup: 写备份文件的路径。 缺省值： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dirname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("_BAK\n-f: 强制覆写备份文件。\n-subdirs: 应处理子目录中的文件。\n-template: 模板文件的路径。 如果不确定，请使用缺省值。\n-log: 写日志的路径。 如果没有提供，则不会写入任何日志。\n-progress: 转换时显示进度。 缺省值： "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n-simulate: 在没有进行转换时显示特定于转换的信息。\n-latest: 使用最新的 JRE 支持发行版 mimetype。\n-gui: 显示转换程序的图形用户界面。\n\nfilespecs: 用空格分开的文件说明列表。 缺省值： "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.html *.htm"')]),t._v(" （需要引号）\n\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("**orbd.exe**\n\n用法：orbd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n其中，"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 包括：\n-port 启动 ORBD 的激活端口，缺省值为 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1049")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("可选"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n-defaultdb ORBD 文件的目录，缺省值为 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./orb.db"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("可选"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n-serverid ORBD 的服务器标识符，缺省值为 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("可选"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n-ORBInitialPort 初始端口（必需）\n-ORBInitialHost 初始主机名称（必需）\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\npolicytool.exe\n\n用法：policytool "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-file "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 规则文件位置\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\nrmic.exe\n\n用法：rmic "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("类名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n其中 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 包括：\n-keep 不删除中间生成的源文件\n-keepgenerated （同 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-keep"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n-v1.1 为 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v(" stub 协议版本创建 stubs/skeleton\n-vcompat （缺省）创建与 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v(" 和\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" stub 协议版本兼容的 stubs/skeleton\n-v1.2 仅为 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" stub 协议版本创建 stubs\n-iiop 为 IIOP 创建 stubs。当使用该选项时，"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("还应包括：\n\n-always 总创建 stubs （即使在它们同时出现时〕\n-alwaysgenerate "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("同 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-always"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n-nolocalstubs 不创建为同一进程优化的 stubs\n\n-idl 创建 IDL。当使用该选项时，"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("还应包括：\n\n-noValueMethods 不生成值类型的方法\n-always 总创建 IDL （即使在它们同时出现时〕\n-alwaysgenerate "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("同 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-always"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n-g 一般调试信息\n-depend 以递归方式重编译过期的文件\n-nowarn 不警告\n-nowrite 不将编译过的类写入到文件系统\n-verbose 输出有关编译器所做工作的信息\n-classpath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 指定输入源和类文件的查找位置\n-sourcepath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 指定用户源文件的查找位置\n-bootclasspath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 覆盖自举类文件的位置\n-extdirs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 覆盖安装扩展类的位置\n-d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("directory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 指定所生成类文件的放置位置\n-J"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("runtime flag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 将参数传给 java 解释程序\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n**rmid.exe**\n\n用法：rmid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("option"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n其中，"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("option"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 包括:\n-port "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("option"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 指定供 rmid 使用的端口\n-log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("directory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 指定 rmid 将日志写入的目录\n-stop 停止当前的 rmid 调用（对指定端口）\n-C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("runtime 标记"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 向每个子进程传递参数（激活组）\n-J"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("runtime 标记"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 向 java 解释程序传递参数\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\nrmiregistry.exe\n\n用法： rmiregistry "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("端口"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n其中，"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 包括：\n-J"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("runtime 标记"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 将参数传递到 java 解释程序\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\nserialver.exe\n\n用法：serialver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-classpath classpath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-show"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("classname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n**servertool.exe**\n\n欢迎使用 Java IDL 服务器工具\n请在提示处输入命令\n\nservertool "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("\n\n可用命令：\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("-------------------\n\nregister - 注册一个可激活的服务器\nunregister - 取消服务器注册\ngetserverid - 返回应用程序名称的服务器标识符\nlist - 列举所有已注册服务器\nlistappnames - 列举当前定义的应用程序名称\nlistactive - 列举当前活动的服务器\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("locate")]),t._v(" - 将已注册服务器定位在特定类型的端口\nlocateperorb - 为已注册服务器的特定对象请求代理程序定位端口。\norblist - 对象请求代理程序 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("orb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 名称及其映射列表\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),t._v(" - 关闭一个已注册服务器\nstartup - 启动一个已注册服务器\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" - 取得帮助\n")])])]),s("h2",{attrs:{id:"quit-退出此工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#quit-退出此工具"}},[t._v("#")]),t._v(" quit - 退出此工具")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("**rmic**\n\n功能说明：\nrmic 为远程对象生成 stub 和 skeleton。\n语法：\nrmic "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" options "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" package-qualified-class-name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n补充说明：\nrmic 编译器根据编译后的 Java 类（含有远程对象实现）名，为远程对象生成 stub 和 skeleton（远程对象是指实现 java.rmi.Remote 接口的对象）。在 rmic 命令中所给的类必须是经 javac 命令成功编译且是完全包限定的类。\n命令选项\n-classpath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("路径"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 指定 rmic 用于查询类的路径。如果设置了该选项，它将覆盖缺省值或 CLASSPATH 环境变量。目录用冒号分隔。\n-d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("目录"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 指定类层次的根目录。此选项可用来指定 stub 和 skeleton 文件的目标目录。\n-depend 使编译器考虑重新编译从其它类引用的类。 一般来说，它只重新编译从源代码引用的遗漏或过期的类。\n-g 允许生成调试表格。调试表格含有行号和局部变量的有关信息，即 Java 调试工具所使用的信息。缺省情况下，只生成行号。\n-J 与 -D 选项联用，它将紧跟其后的选项（ -J 与 -D 之间无空格）传给 java 解释器。\n-keepgenerated 为 stub 和 skeleton 文件保留所生成的 .java 源文件，并将这些源文件写到与 .class 文件相同的目录中，如果要指定目录，则使用 -d 选项。\n-nowarn 关闭警告。如果使用该选项，则编译器不输出任何警告信息。\n-show 显示 rmic 编译器的 GUI（图形用户界面）。输入一个或多个包限定类名（以空格分隔），并按回车键或“显示”按钮，创建 stub 和 skeleton。\n-vcompat （缺省值）创建与 JDK "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v(" 和 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" stub 协议版本都兼容的 stub 和 skeleton。\n-verbose 使编译器和链接器输出关于正在编译哪些类和正在加载哪些类文件的信息。\n-v1.1 创建 JDK "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v(" stub 协议版本的 stub 和 skeleton。\n-v1.2 只创建 JDK "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" stub 协议版本的 stub。\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\nrmid\n\n功能说明：\nrmid 启动激活系统守护进程，以便能够在 Java 虚拟机上注册和激活对象。\n语法：\nrmid "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-port port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-log dir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n补充说明：\nrmid 工具启动激活系统守护进程。必须先启动激活系统守护进程，才能向激活系统注册可被激活的对象或在 Java 虚拟机上激活可被激活的对象。\n命令选项\n-C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("某些命令行选项"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 指定一个选项，在创建每个 rmid 的子守护进程（激活组）时，该选项以命令行参数的形式传给该子守护进程。\n-log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("目录"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 指定目录的名称，激活系统守护进程在该目录中写入其数据库及相关信息。缺省状态下，将在执行 rmid 命令的目录中创建一个 log 目录。\n-port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("端口"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 指定 rmid 的注册服务程序所使用的端口。激活系统守护进程将 ActivationSystem 与该注册服务程序中的名称java.rmi.activation.ActivationSystem 捆绑在一起。\n-stop 停止 -port 选项所指定端口上的当前 rmid 调用。若未指定端口，则将停止在端口 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1098")]),t._v(" 上运行的 rmid。\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\nrmiregistry\n\n功能说明：\nrmiregistry 命令可在当前主机的指定端口上启动远程对象注册服务程序。\n语法：\nrmiregistry "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n补充说明：\nrmiregistry 命令在当前主机的指定 port 上创建并启动远程对象注册服务程序。如果省略 port，则注册服务程序将在 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1099")]),t._v(" 端口上启动。rmiregistry 命令不产生任何输出而且一般在后台运行。远程对象注册服务程序是自举命名服务。主机上的 RMI 服务器将利用它将远程对象绑定到名字上。客户机即可查询远程对象并进行远程方法调用。注册服务程序一般用于定位应用程序需调用其方法的第一个远程对象。该对象反过来对各应用程序提供相应的支持，用于查找其它对象。java.rmi.registry.LocateRegistry 类的方法可用于在某台主机或主机和端口上获取注册服务程序操作。java.rmi.Naming 类的基于 URL 的方法将对注册服务程序进行操作，并可用于查询远程对象、将简单（字符串）名称绑定到远程对象、将新名称重新绑定到远程对象（覆盖旧绑定）、取消远程对象的绑定以及列出绑定在注册服务程序上的 URL。\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\nserialver\n\n功能说明：\nserialver 命令返回 serialVersionUID。\n语法：\nserialver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 命令选项 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n补充说明：\nserialver 以适于复制到演变类的形式返回一个或多个类的 serialVersionUID。不带参数调用时，它输出用法行。\n命令选项\n-show 显示一个简单的用户界面。输入完整的类名并按回车键或“显示”按钮可显示 serialVersionUID。\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n\njarsigner\n\n功能说明：\n为 Java 归档 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JAR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 文件产生签名，并校验已签名的 JAR 文件的签名。\n语法：\njarsigner "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 命令选项 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" jar-file "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("alias")]),t._v("\njarsigner -verify "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 命令选项 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" jar-file\n补充说明：\njarsigner 工具用于两个目的：\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":为 Java 归档 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JAR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 文件签名\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(":校验已签名的 JAR 文件的签名和完整性\n命令选项\n-keystore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 指定密钥仓库的 URL。缺省值是用户的宿主目录中的 .keystore 文件，它由系统属性“user.home”决定。\n-storetype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("storetype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 指定要被实例化的密钥仓库类型。默认的密钥仓库类型是安全属性文件中 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keystore.type"')]),t._v(" 属性值所指定的那个类型，由 java.security.KeyStore 中的静态方法 getDefaultType 返回。\n-storepass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 指定访问密钥仓库所需的口令。这仅在签名（不是校验）JAR 文件时需要。在这种情况下，如果命令行中没有提供 -storepass 选项，用户将被提示输入口令。\n-keypass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 指定用于保护密钥仓库项（由命令行中指定的别名标出）的私钥的口令。使用 jarsigner 为 JAR 文件签名时需要该口令。如果命令行中没有提供口令，且所需的口令与密钥仓库的口令不同，则将提示用户输入它。\n-sigfile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 指定用于生成 .SF 和 .DSA 文件的基本文件名。\n-signedjar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 指定用于已签名的 JAR 文件的名称。\n-verify 如果它出现在命令行中，则指定的 JAR 文件将被校验，而不是签名。如果校验成功，将显示“jar verified”。如果试图校验未签名的 JAR 文件，或校验被不支持的算法（例如未安装 RSA 提供者时使用的 RSA）签名的 JAR 文件，则将有如下显示： "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jar is unsigned. (signatures missing or not parsable)"')]),t._v(" 。\n-certs 如果它与 -verify 和 -verbose 选项一起出现在命令行中，则输出将包括 JAR 文件的每个签名人的证书信息。\n-verbose 如果它出现在命令行中，则代表“verbose”模式，它使 jarsigner 在 JAR 签名或校验过程中输出额外信息。\n-internalsf 过去，JAR 文件被签名时产生的 .DSA（签名块）文件包含一个同时产生的 .SF 文件（签名文件）的完整编码副本。这种做法已被更改。为了减小输出 JAR 文件的整个大小，缺省情况下 .DSA 文件不再包含 .SF 文件的副本。但是如果 -internalsf 出现在命令行中，将采用旧的做法。该选项主要在测试时有用；实际上不应使用它，因为这样将消除有用的优化。\n-sectionsonly 如果它出现在命令行中，则 JAR 文件被签名时生成的 .SF 文件（签名文件）将不包括含有整个清单文件的散列的头。它仅包含 与 JAR 中每个单独的源文件相关的信息和散列。该选项主要在测试时有用；实际上不应使用它，因为这样将消除有用的优化。\n-J"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("javaoption"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 将指定的 javaoption 串直接传递到 Java 解释器。"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("（jarsigner 实际上是解释器的一个 “wrapper”）。该选项不应含有任何空格。它有助于调整执行环境或内存使用。要获得可用的解释器选项的清单，可在命令行键入 java -h 或 java -X。\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n\nkeytool\n功能说明：\n管理由私钥和认证相关公钥的 X.509 证书链组成的密钥仓库（数据库）。还管理来自可信任实体的证书。\n语法：\nkeytool "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 命令 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n补充说明：\nkeytool 是个密钥和证书管理工具。它使用户能够管理自己的公钥/私钥对及相关证书，用于（通过数字签名）自我认证（用户向别的用户/服务认证自己）或数据完整性以及认证服务。它还允许用户储存他们的通信对等者的公钥（以证书形式）。\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\nnative2ascii\n\n功能说明：\n将含有本地编码字符（既非 Latin1 又非 Unicode 字符）的文件转换为 Unicode 编码字符的文件。\n语法：\nnative2ascii "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("inputfile "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("outputfile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n补充说明：\nJava 编译器和其它 Java 工具只能处理含有 Latin-1 和/或 Unicode 编码（udddd 记号）字符的文件。native2ascii 将含有其它字符编码的文件转换成含 Latin-1 和/或 Unicode 编码字符的文件。若省略 outputfile，则使用标准输出设备输出。此外，如果也省略 inputfile，则使用标准输入设备输入。\n命令选项\n-reverse 执行相反的操作：将含 Latin-1 和/或 Unicode 编码字符的文件转换成含本地编码字符的文件。\n-encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("encoding_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 指定转换过程使用的编码名称。缺省的编码从系统属性 file.encoding 中得到。\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\nappletviewer\n\n功能说明：\nJava applet 浏览器。appletviewer 命令可在脱离万维网浏览器环境的情况下运行 applet。\n语法：\nappletviewer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" threads flag "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 命令选项 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" urls "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n补充说明：\nappletviewer 命令连接到 url 所指向的文档或资源上，并在其自身的窗口中显示文档引用的每个 applet。注意：如果 url 所指向的文档不引用任何带有 OBJECT、EMBED 或 APPLET 标记的 applet，那么 appletviewer 就不做任何事情。\n命令选项\n-debug 在 Java 调试器 jdb 中启动 appletviewer，使您可以调试文档中的 applet。\n-encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("编码名称"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 指定输入 HTML 文件的编码名称。\n-J"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("javaoption"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 将 javaoption 字符串作为单个参数传给运行 appletviewer 的 Java 解释器。参数不能含有空格。由多重参数组成的字符串，其中的每个参数都必须以前缀 -J 开头，该前缀以后将被除去。这在调整编译器的执行环境或内存使用时将很有用。\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\nextcheck\n\n功能说明：\nextcheck 检测目标 jar 文件与当前安装方式扩展 jar 文件间的版本冲突。\n语法：\nextcheck "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" -verbose "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" targetfile.jar\n补充说明：\nextcheck 实用程序检查指定 Jar 文件的标题和版本与 JDK TM 软件中所安装的扩展是否有冲突。在安装某个扩展前，可以用该实用程序查看是否已安装了该扩展的相同版本或更高的版本。\nextcheck 实用程序将 targetfile.jar 文件清单的 specification-title 和 specification-version 头与当前安装在扩展目录下所有 Jar 文件的相对应的头进行比较（缺省扩展目录为 jre/lib/ext）。extcheck 实用程序比较版本号的方式与 java.lang.Package.isCompatibleWith 方法相同。若未检测到冲突，则返回代码为 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("。如果扩展目录中任何一个 jar 文件的清单有相同的 specification-title 和相同的或更新的 specification-version 号，则返回非零错误代码。如果 targetfile.jar 的清单中没有 specification-title 或 specification-version 属性，则同样返回非零错误代码。\n命令选项\n-verbose 对扩展目录中的 Jar 文件进行检查时，列出文件。此外，还报告目标 jar 文件的清单属性及所有冲突的 jar 文件。\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\njar\n\n功能说明：\nJava归档工具\n语法：\njar "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 命令选项 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("manifest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" destination input-file "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("input-files"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n补充说明：\njar工具是个java应用程序，可将多个文件合并为单个JAR归档文件。jar是个多用途的存档及压缩工具，它基于ZIP和ZLIB压缩格式。然而，设计jar的主要目的是便于将java applet或应用程序打包成单个归档文件。将applet或应用程序的组件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(".class 文件、图像和声音"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("合并成单个归档文件时，可以用java代理"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("如浏览器"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("在一次HTTP事务处理过程中对它们进行下载，而不是对每个组件都要求一个新连接。这大大缩短了下载时间。jar还能压缩文件，从而进一步提高了下载速度。此外，它允许applet的作者对文件中的各个项进行签名，因而可认证其来源。jar工具的语法基本上与tar命令的语法相同。\n命令选项\n-c 在标准输出上创建新归档或空归档。\n-t 在标准输出上列出内容表。\n-x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 从标准输入提取所有文件，或只提取指定的文件。如果省略了file，则提取所有文件；否则只提取指定文件。\n-f 第二个参数指定要处理的jar文件。在-c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("创建"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("情形中，第二个参数指的是要创建的jar文件的名称"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("不是在标准输出上"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。在-t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("或-x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("抽取"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("这两种情形中，第二个参数指定要列出或抽取的jar文件。\n-v 在标准错误输出设备上生成长格式的输出结果。\n-m 包括指定的现有清单文件中的清单信息。用法举例：“jar cmf myManifestFile myJarFile *.class”\n-0 只储存，不进行 ZIP 压缩。\n-M 不创建项目的清单文件。\n-u 通过添加文件或更改清单来更新现有的 JAR 文件。例如：“jar -uf foo.jar foo.class”将文件 foo.class 添加到现有的JAR文件foo.jar中，而“jar umf manifest foo.jar”则用manifest中的信息更新foo.jar的清单。\n-C 在执行 jar 命令期间更改目录。例如：“jar -uf foo.jar -C classes *”将classes目录内的所有文件加到foo.jar中，但不添加类目录本身。\n程序示例\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":将当前目录下所有CLASS文件打包成新的JAR文件：\njar cf file.jar *.class\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(":显示一个JAR文件中的文件列表\njar tf file.jar\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(":将当前目录下的所有文件增加到一个已经存在的JAR文件中\njar cvf file.jar *\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n\njavadoc\n\n功能说明\nJava API文档生成器从Java源文件生成API文档HTML页。\n语法：\njavadoc "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 命令选项 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 包名 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 源文件名 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" @files "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n其中"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 包名 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("为用空格分隔的一系列包的名字，包名不允许使用通配符，如（*）。"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 源文件名 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("为用空格分\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);