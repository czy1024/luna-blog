(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{758:function(a,s,e){"use strict";e.r(s);var t=e(7),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("前言：本篇文章主要是对于Redis官方配置文件的翻译，主要目的是便于自己了解Redis及分析为初学者提供配置文件的中文翻译。\n英语水平有限，因此文中有诸多不恰当的地方，欢迎指正，同时本文去掉了官方文档中一些个人认为不那么重要的配置内容。")]),a._v(" "),e("h1",{attrs:{id:"redis配置文件示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis配置文件示例"}},[a._v("#")]),a._v(" Redis配置文件示例")]),a._v(" "),e("p",[a._v("Redis在启动的时候必须将配置文件的路径作为启动的参数，以便于能够正确读取配置文件。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("./redis-server /path/to/redis.conf\n")])])]),e("p",[a._v("内存大小单位：所有配置文件中内存大小的表示单位，一般的表现形式如下：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("# 1k => 1000 bytes\n# 1kb => 1024 bytes\n# 1m => 1000000 bytes\n# 1mb => 1024*1024 bytes\n# 1g => 1000000000 bytes\n# 1gb => 1024*1024*1024 bytes\n")])])]),e("p",[a._v("并且内存大小表示单位是内存不敏感的，"),e("code",[a._v("1GB 1Gb 1gB")]),a._v("表示的含义相同。")]),a._v(" "),e("h1",{attrs:{id:"_1-配置文件详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-配置文件详解"}},[a._v("#")]),a._v(" 1. 配置文件详解")]),a._v(" "),e("h2",{attrs:{id:"_1-includes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-includes"}},[a._v("#")]),a._v(" 1. INCLUDES")]),a._v(" "),e("p",[a._v("一个配置文件中可以包含一个或者多个其他的配置文件，主要是便于管理，类似于Spring中分为各个细的配置文件。\n如果每个redis服务器有一个的标准配置模板，并且还需要为某些服务器设置特定的配置，则文件的相互包含十分有效。A包含B，B也可以包含C")]),a._v(" "),e("p",[a._v("被包含的文件不会被因为"),e("code",[a._v("CONFIG REWRITE")]),a._v("命令而重写。因为 Redis 始终使用最后一个处理过的命令行作为配置指令，因此最好将 被包含文件放在此文件的开头来避免在运行将配置覆盖。")]),a._v(" "),e("p",[a._v("相反，如果真的想使用 include 来覆盖配置选项，则最好使用 include 作为最后一行。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("# include /path/to/local.conf\n# include /path/to/other.conf\n")])])]),e("h2",{attrs:{id:"_2-modules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-modules"}},[a._v("#")]),a._v(" 2.MODULES")]),a._v(" "),e("p",[a._v("启动时加载模块。如果服务器无法加载模块，该模块将会被废弃，也可以使用多个加载模块命令。\n做redis功能扩展使用")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("# loadmodule /path/to/my_module.so\n# loadmodule /path/to/other_module.so\n")])])]),e("h2",{attrs:{id:"_3-network"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-network"}},[a._v("#")]),a._v(" 3. NETWORK")]),a._v(" "),e("p",[a._v('默认情况下，如果未指定"bind"具体的配置指令，Redis将监听来自服务器上所有可用网络接口的连接请求。')]),a._v(" "),e("p",[a._v('可以使用"bind"配置指令仅监听一个或多个选定的接口，然后被一个或多个 特定的IP 地址连接。')]),a._v(" "),e("p",[a._v("默认情况下，如果不配置具体的ip，则链接服务器所有的网络接口，如果具体指出，则只连接具体的某一个ip。如果不绑定特定的ip，则会造成连接的不安全性。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("# bind 192.168.1.100 10.0.0.1\n# bind 127.0.0.1 ::1\n")])])]),e("p",[a._v("注意点：如果运行redis的计算机直接对所有的网络开放，会使服务器十分危险，者会将服务器直接暴露给所有的互联网用户。\n因此，默认情况下，会设置如下绑定指令，这将强制 Redis 仅侦听 IPv4接口地址（这意味着 Redis 只能接受来自运行在同一台计算机的客户端连接）")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("bind 127.0.0.1 ::1                      // 注释这一行将会允许redis被所有计算机连接\n")])])]),e("h3",{attrs:{id:"设置连接模式是否安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置连接模式是否安全"}},[a._v("#")]),a._v(" 设置连接模式是否安全")]),a._v(" "),e("p",[a._v("保护模式是一层安全保护，以避免在 Redis 实例被 Internet 上所有用户访问和利用。")]),a._v(" "),e("p",[a._v("以下两种情况会导致保护模式开启：")]),a._v(" "),e("ol",[e("li",[a._v("redis服务器没有直接绑定任何的地址")]),a._v(" "),e("li",[a._v("没有设置登录密码")])]),a._v(" "),e("p",[a._v("保护模式默认是开启的，如果确认想关闭时，则只需要将保护模式设置为no")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("protected-mode yes\n")])])]),e("h3",{attrs:{id:"设置redis连接端口号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置redis连接端口号"}},[a._v("#")]),a._v(" 设置redis连接端口号")]),a._v(" "),e("p",[a._v("设置可以连接的特定端口号，默认的端口是6379")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("port 6379\n")])])]),e("h3",{attrs:{id:"设置tcp连接的监听日志"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置tcp连接的监听日志"}},[a._v("#")]),a._v(" 设置TCP连接的监听日志")]),a._v(" "),e("p",[a._v("设置Tcp的backlog，backlog其实是一个连接队列，backlog队列总和=未完成的三次握手队列+已完成的三次握手队列\n在高并发下需要一个高backlog来避免慢客户端连接问题，linux内核会将这个值减少到"),e("code",[a._v("/proc/sys/net/core/somaxconn")]),a._v("\n所以为了确保能保证得到想要结果，需要确认增大"),e("code",[a._v("somaxconn")]),a._v("和 "),e("code",[a._v("tcp_max_syn_backlog")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("tcp-backlog 511\n1\n")])])]),e("h3",{attrs:{id:"设置自动断开连接的时间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置自动断开连接的时间"}},[a._v("#")]),a._v(" 设置自动断开连接的时间")]),a._v(" "),e("p",[a._v("当客户端空闲多久时会自动断开连接，如果设置为0，则不会自动断开。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("timeout 0\n")])])]),e("h3",{attrs:{id:"设置否是长连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置否是长连接"}},[a._v("#")]),a._v(" 设置否是长连接")]),a._v(" "),e("p",[a._v("如果该值不设置为非零，在没有通信的情况下利用"),e("code",[a._v("SO_KEEPALIVE")]),a._v("发送tcp acks信息 给客户端，这样做的理由如下：")]),a._v(" "),e("ol",[e("li",[a._v("检测已经挂掉的客户端")]),a._v(" "),e("li",[a._v("从中间的网络设备的角度保证连接不中断。")])]),a._v(" "),e("p",[a._v("在linux系统中，一定时间段内发送ACKS的数据量是特定的，\n如果设置为0则不会进行keyalive检测，建议设置成300s")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("tcp-keepalive 300\n")])])]),e("h2",{attrs:{id:"_4-general-通用设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-general-通用设置"}},[a._v("#")]),a._v(" 4. GENERAL(通用设置)")]),a._v(" "),e("h3",{attrs:{id:"设置是否后台运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置是否后台运行"}},[a._v("#")]),a._v(" 设置是否后台运行")]),a._v(" "),e("p",[a._v("默认情况下，Redis不在后台运行，如果需要开启后台运行，则将下值设置为yes。\n在后台运行的时候，Redis会写入到特定的pid文件，默认的文件地址为："),e("code",[a._v("/usr/local/var/run/redis.pid")]),a._v("，如果关闭后台运行，则不写入该文件中。\n设置是否后台程序，是否允许关闭doc窗口redis继续提供服务")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(" daemonize no\n1\n")])])]),e("h3",{attrs:{id:"设置监控模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置监控模式"}},[a._v("#")]),a._v(" 设置监控模式")]),a._v(" "),e("p",[a._v("如果将redis运行模式设置为"),e("code",[a._v("upstart")]),a._v("或者"),e("code",[a._v("systemd")]),a._v("模式，则redis可以与监控系统进行交互。\n该参数可以设置的值为：")]),a._v(" "),e("ol",[e("li",[a._v("supervised no - 不设置监控模式")]),a._v(" "),e("li",[a._v("supervised upstart - signal upstart by putting Redis into SIGSTOP mode")]),a._v(" "),e("li",[a._v("supervised systemd - signal systemd by writing READY=1 to $NOTIFY_SOCKET")]),a._v(" "),e("li",[a._v("supervised auto - detect upstart or systemd method based on UPSTART_JOB or NOTIFY_SOCKET environment variables")])]),a._v(" "),e("p",[a._v("设置是否需要监控，默认不开启监控模式")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("supervised no\n")])])]),e("h3",{attrs:{id:"指定pid文件的地址"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定pid文件的地址"}},[a._v("#")]),a._v(" 指定pid文件的地址")]),a._v(" "),e("p",[a._v("如果指定pid文件的路径，Redis启动的时候会向该文件中写入信息，退出时则会删除该文件。\n当redis服务器设置为不可以在后台运行，则启动的时候不会创建pid文件。如果redis服务器设置为后台运行，及时不指定pid文件的文件路径，也会按照默认的地址创建路径。如果不手动指定，则将其放置在"),e("code",[a._v("/usr/local/var/run/redis.pid")]),a._v("\n创建pid文件是很有必要的：")]),a._v(" "),e("p",[a._v("如果redis不可以创建该文件，但没有其他坏事发生，redis服务器还是可以正常启动和运行。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("pidfile /var/run/redis_6379.pid\n1\n")])])]),e("h3",{attrs:{id:"指定服务器详细日志级别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定服务器详细日志级别"}},[a._v("#")]),a._v(" 指定服务器详细日志级别")]),a._v(" "),e("p",[a._v("具体的设置可以有:")]),a._v(" "),e("ol",[e("li",[a._v("debug (大量信息，有利于开发和测试)")]),a._v(" "),e("li",[a._v("verbose (很多相对有用的信息，但是日志量没有dug多)")]),a._v(" "),e("li",[a._v("notice (一般详细的信息，一般是生产中可能用到的) 默认级别")]),a._v(" "),e("li",[a._v("warning (只是监控一些非常重要或者关键的信息)")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("loglevel notice\n")])])]),e("h3",{attrs:{id:"指定日志文件的名称"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定日志文件的名称"}},[a._v("#")]),a._v(" 指定日志文件的名称")]),a._v(" "),e("p",[a._v("指定日志文件的名称，会强制redis将日志按照标准输出到该文件中。如果后台按照标准文件的格式输出到日志文件，日志文件会默认放到"),e("code",[a._v("/dev/null")]),a._v("文件下")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('logfile "6381.log"\n1\n')])])]),e("h3",{attrs:{id:"是否开启系统日志"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#是否开启系统日志"}},[a._v("#")]),a._v(" 是否开启系统日志")]),a._v(" "),e("p",[a._v("如果想要打印系统日志，只需要将该值设置为yes即可，")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("syslog-enabled no\n")])])]),e("h3",{attrs:{id:"指定系统日志标志"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定系统日志标志"}},[a._v("#")]),a._v(" 指定系统日志标志")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("syslog-ident redis\n")])])]),e("h3",{attrs:{id:"指定系统日志用途"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定系统日志用途"}},[a._v("#")]),a._v(" 指定系统日志用途")]),a._v(" "),e("p",[a._v("指定系统日志用途,必须是"),e("code",[a._v("USER")]),a._v("或者是"),e("code",[a._v("LOCAL0-LOCAL7")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("syslog-facility local0\n")])])]),e("h3",{attrs:{id:"设置数据库的数量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置数据库的数量"}},[a._v("#")]),a._v(" 设置数据库的数量")]),a._v(" "),e("p",[a._v("默认选择的数据库是"),e("code",[a._v("select 0")]),a._v("，选择的数据库必须数据"),e("code",[a._v("(0,'databases'-1)")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("databases 16\n")])])]),e("h3",{attrs:{id:"是否展示启动时候的艺术log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#是否展示启动时候的艺术log"}},[a._v("#")]),a._v(" 是否展示启动时候的艺术log")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("always-show-logo yes\n")])])]),e("h2",{attrs:{id:"_5-snapshotting-快照"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-snapshotting-快照"}},[a._v("#")]),a._v(" 5. SNAPSHOTTING(快照)")]),a._v(" "),e("p",[a._v("主要是保证数据的持久化。\n将数据保存到磁盘中，具体的设置模式\n设置存储数据库的周期\n设置的格式")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("save <seconds> <changes>\n")])])]),e("p",[a._v("只要设置的任意一种情况发生，都会将redis中存储的数据写入到磁盘中")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("save 900 1                  900s中有一个key发生变化\nsave 300 10                 300s内有10个key发生变化\nsave 60 10000               60s内有10000个key发生变化\n")])])]),e("p",[a._v("如果想禁用RDB，则需要设置成，并且注释掉上面的三个默认设置：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('save ""\n')])])]),e("h3",{attrs:{id:"持久化出问题时是否允许写操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#持久化出问题时是否允许写操作"}},[a._v("#")]),a._v(" 持久化出问题时是否允许写操作")]),a._v(" "),e("p",[a._v("在快照后台保存失败情况下，默认停止写操作，让用户意识到故障，否则没有注意到问题回到值故障产生。\n如果已经建立的适当的监控，即使在后台快照备份失败时也执行写操作，则需要将其设置为no。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("stop-writes-on-bgsave-error yes\n1\n")])])]),e("h3",{attrs:{id:"是否压缩rdb文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#是否压缩rdb文件"}},[a._v("#")]),a._v(" 是否压缩rdb文件")]),a._v(" "),e("p",[a._v("设置是否压缩"),e("code",[a._v("dump .rdb")]),a._v("文件，推荐开启，否则文件会越来越大。如果不想消耗cpu内存，则可以设置为no，但是这样的话日志文件会越来越大。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("rdbcompression yes\n")])])]),e("h3",{attrs:{id:"是否开启数据校验"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#是否开启数据校验"}},[a._v("#")]),a._v(" 是否开启数据校验")]),a._v(" "),e("p",[a._v("设置rdb checkSum是否跳过，是否进行数据校验。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("rdbchecksum yes\n")])])]),e("h3",{attrs:{id:"设置rdb文件名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置rdb文件名"}},[a._v("#")]),a._v(" 设置rdb文件名")]),a._v(" "),e("p",[a._v("设置数据库dump文件的名称,每个操作都会记录到dump.rds中，重启服务器，客户端连接时会重新写入")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("dbfilename dump.rdb\n")])])]),e("h3",{attrs:{id:"设置工作目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置工作目录"}},[a._v("#")]),a._v(" 设置工作目录")]),a._v(" "),e("p",[a._v("在该目录中，会存储数据库的写操作的rdb文件及AOF文件，这里只是指定文件夹路径，而不是具体的文件名称。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("dir /usr/local/var/db/redis/\n")])])]),e("h2",{attrs:{id:"_6-replication-主从复制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-replication-主从复制"}},[a._v("#")]),a._v(" 6. REPLICATION (主从复制)")]),a._v(" "),e("p",[a._v("对于redis的复制需要理解以下几点：\nmaster主要接受写，slaver是对于master的精确复制。")]),a._v(" "),e("ol",[e("li",[a._v("redis主从同步是异步的，但是可以让在没有指定slave连接的情况下使master停止写入数据。")]),a._v(" "),e("li",[a._v("连接中断一定时间内，如果复制缺失了一段时间内的数据，slave可以执行部分数据重新同步。")]),a._v(" "),e("li",[a._v("同步是自动的，不需要人工接入，slave可以自动重连并且自动同步数据。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("replicaof <masterip> <masterport>\n")])])]),e("h3",{attrs:{id:"设置master的链接密码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置master的链接密码"}},[a._v("#")]),a._v(" 设置master的链接密码")]),a._v(" "),e("p",[a._v("如果master链接需要密码(这个是通过"),e("code",[a._v("requirepass")]),a._v("控制)，则在创建slaver链接master时，在同步之前，需要确认密码，否则master服务器将会具体slaver的链接。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("masterauth <master-password>\n\n")])])]),e("h3",{attrs:{id:"当slaver与master失去连接时-从机表现情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#当slaver与master失去连接时-从机表现情况"}},[a._v("#")]),a._v(" 当slaver与master失去连接时，从机表现情况？")]),a._v(" "),e("p",[a._v("当一个slave失去和master的连接，或者同步正在进行中，slave的行为有两种可能：")]),a._v(" "),e("ol",[e("li",[a._v("如果 "),e("code",[a._v("slave-serve-stale-data")]),a._v(" 设置为 “yes” (默认值)，slave会继续响应客户端请求，可能是正常数据，也可能是还没获得值的空数据。")]),a._v(" "),e("li",[a._v("如果 "),e("code",[a._v("slave-serve-stale-data")]),a._v(' 设置为 “no”，slave会回复"正在从master同步（SYNC with master in progress）"来处理除了以下的其他各种请求：\n'),e("code",[a._v("INFO, replicaOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG, SUBSCRIBE, UNSUBSCRIBE, PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB, COMMAND, POST, HOST: and LATENCY.")])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("replica-serve-stale-data yes\n")])])]),e("h3",{attrs:{id:"配置slave是否接受写操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置slave是否接受写操作"}},[a._v("#")]),a._v(" 配置slave是否接受写操作")]),a._v(" "),e("p",[a._v("可写的slave实例可能对存储临时数据比较有用(因为写入salve# 的数据在同master同步之后将很容被删除)，但是如果客户端由于配置错误在写入时也可能产生一些问题。")]),a._v(" "),e("p",[a._v("从redis 2.6 之后所有的slave都是只读的。")]),a._v(" "),e("p",[a._v("注：只读副本不会暴露给互联网上不受信任的客户端，防止redis被无用，加强保护。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("replica-read-only yes\n")])])]),e("h3",{attrs:{id:"副本同步策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#副本同步策略"}},[a._v("#")]),a._v(" 副本同步策略")]),a._v(" "),e("p",[e("strong",[a._v("非磁盘复制目前处于试验阶段")]),a._v("\n针对于新的slave或者重新链接的slave因为连接发生变化，无法继续备份过程，需要进行全同步的过程。从master同步到slave又两种方式：")]),a._v(" "),e("ol",[e("li",[a._v("Disk-backed(磁盘备份)：master创建一个新的进程专门用于将数据库写入到磁盘中，稍后通过父进程将该文件复制到slave节点中。")]),a._v(" "),e("li",[a._v("Diskless(非磁盘)：master创建一个新进程直接将RDB文件写入到slave中，不必在磁盘中创建文件。")])]),a._v(" "),e("p",[a._v("设置同步的策略,默认为磁盘策略")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("repl-diskless-sync no\n")])])]),e("h3",{attrs:{id:"设置非磁盘同步的延迟时间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置非磁盘同步的延迟时间"}},[a._v("#")]),a._v(" 设置非磁盘同步的延迟时间")]),a._v(" "),e("p",[a._v("如果非磁盘同步方式开启，可以配置同步延迟时间，以等待master产生子进程通过socket传输RDB数据给slave。")]),a._v(" "),e("p",[a._v("默认值为5秒，设置为0秒则每次传输无延迟。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("repl-diskless-sync-delay 5\n")])])]),e("h3",{attrs:{id:"slaver给master发送ping请求的时间间隔"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slaver给master发送ping请求的时间间隔"}},[a._v("#")]),a._v(" slaver给master发送ping请求的时间间隔")]),a._v(" "),e("p",[a._v("slave根据指定的时间间隔向master发送ping请求。默认10秒")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("repl-ping-replica-period 10\n")])])]),e("h3",{attrs:{id:"复制的超时时间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复制的超时时间"}},[a._v("#")]),a._v(" 复制的超时时间")]),a._v(" "),e("p",[a._v("下列操作可能导致同步的超时：")]),a._v(" "),e("ol",[e("li",[a._v("slave在与master SYNC期间有大量数据传输，造成超时")]),a._v(" "),e("li",[a._v("从slave观察，master超时，包括数据、ping等")]),a._v(" "),e("li",[a._v("在master观察，slave超时，当master发送"),e("code",[a._v("REPLCONF ACK pings")])])]),a._v(" "),e("p",[a._v("设置超时时间，该值不易设置过小，需要大于指定的repl-ping-slave-period，否则即使复制数据量不大时，也容易频繁出现超时情况。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("repl-timeout 60\n")])])]),e("h3",{attrs:{id:"是否在slave套接字发送sync之后禁用-tcp-nodelay"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#是否在slave套接字发送sync之后禁用-tcp-nodelay"}},[a._v("#")]),a._v(" 是否在slave套接字发送SYNC之后禁用 TCP_NODELAY？")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("repl-disable-tcp-nodelay no\n")])])]),e("ol",[e("li",[a._v("如果选择yes，Redis将使用更少的TCP包和带宽来向slaves发送数据。但是这将使数据传输到slave上有延迟，Linux内核的默认配置会达到40毫秒。")]),a._v(" "),e("li",[a._v("如果选择no，数据传输到salve的延迟将会减少但要使用更多的带宽。")]),a._v(" "),e("li",[a._v("默认我们会为"),e("strong",[a._v("低延迟做优化")]),a._v("，但高流量情况或主从之间的跳数过多时，可以设置为“yes”。")])]),a._v(" "),e("h3",{attrs:{id:"设置数据备份的backlog大小"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置数据备份的backlog大小"}},[a._v("#")]),a._v(" 设置数据备份的backlog大小")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("repl-backlog-size 1mb\n")])])]),e("ol",[e("li",[a._v("backlog是一个slave在一段时间内断开连接时记录salve数据的缓冲，所以一个slave在重新连接时，不必要全量的同步，而是一个增量同步，将在断开连接的这段时间内把slave丢失的部分数据传送给它。")]),a._v(" "),e("li",[a._v("同步的backlog越大，slave能够进行增量同步并且允许断开连接的时间就越长。")]),a._v(" "),e("li",[a._v("backlog只分配一次并且至少需要一个slave连接。")])]),a._v(" "),e("h2",{attrs:{id:"设置缓冲backlog超时时间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置缓冲backlog超时时间"}},[a._v("#")]),a._v(" 设置缓冲backlog超时时间")]),a._v(" "),e("p",[a._v("当master在一段时间内不再与任何slave连接，backlog将会释放。以下选项配置了从最后一个slave断开开始计时多少秒后，backlog缓冲将会释放。")]),a._v(" "),e("p",[a._v("0表示永不释放backlog")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("repl-backlog-ttl 3600\n")])])]),e("h3",{attrs:{id:"设置每个slave的优先级别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置每个slave的优先级别"}},[a._v("#")]),a._v(" 设置每个slave的优先级别")]),a._v(" "),e("p",[a._v("salver的优先级别是由Redis配置信息决定的整数，主要目的是：当master挂掉之后哨兵选择优先级别最低的slave去替换master，默认的优先级别为100。")]),a._v(" "),e("p",[a._v("例如有三个slave优先级分别为10，100，25，sentinel将挑选优先级最小数字为10的slave")]),a._v(" "),e("p",[a._v("然而，0作为一个特殊的优先级，标识这个slave不能作为master，所以一个优先级为0的slave永远不会被哨兵挑选提升为master。")]),a._v(" "),e("p",[a._v("系统默认的优先级别是100.")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("replica-priority 100\n")])])]),e("h3",{attrs:{id:"设置主机中断写操作的条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置主机中断写操作的条件"}},[a._v("#")]),a._v(" 设置主机中断写操作的条件")]),a._v(" "),e("p",[a._v("如果master少于N个连接，延时小于等于M秒的已连接slave，就可以停止接收写操作。")]),a._v(" "),e("p",[a._v("例如至少需要3个延时小于等于10秒的slave用下面的指令")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("min-replicas-to-write 3\nmin-replicas-max-lag 10\n")])])]),e("p",[a._v("两者之一设置为0将禁用这个功能，\n两个值的默认值分别是：\n默认"),e("code",[a._v("min-slaves-to-write")]),a._v(" 值是0, 默认"),e("code",[a._v("min-slaves-max-lag")]),a._v("值是10。")]),a._v(" "),e("h3",{attrs:{id:"设置slave-ip及port"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置slave-ip及port"}},[a._v("#")]),a._v(" 设置slave ip及port")]),a._v(" "),e("p",[a._v("可以通过不同的方式查看Redis master服务器所连接的slaver的ip地址及端口号。\n"),e("code",[a._v("INFO replication")]),a._v("命令可以查看主机及从机的集群信息;或者可以通过"),e("code",[a._v("ROLE")]),a._v("命令查看主机的一些配置。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("replica-announce-ip 5.5.5.5\nreplica-announce-port 1234\n")])])]),e("h2",{attrs:{id:"_7-security-安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-security-安全"}},[a._v("#")]),a._v(" 7. SECURITY(安全)")]),a._v(" "),e("p",[a._v("一旦设置了密码，则需要再连接前先进行授权"),e("code",[a._v("AUTH <PASSWORD>")]),a._v("，但是大部分情况下都不需要设置密码的，因为Redis主要目的是保证性能。")]),a._v(" "),e("h3",{attrs:{id:"查看设置的密码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看设置的密码"}},[a._v("#")]),a._v(" 查看设置的密码")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("CONFIG GET requirepass\n")])])]),e("h3",{attrs:{id:"设置客户端连接的密码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置客户端连接的密码"}},[a._v("#")]),a._v(" 设置客户端连接的密码")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("requirepass foobared\n")])])]),e("h3",{attrs:{id:"通过命令的方式设置密码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过命令的方式设置密码"}},[a._v("#")]),a._v(" 通过命令的方式设置密码")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('config set requirepass "password"\n')])])]),e("h3",{attrs:{id:"如果设置了密码则需要先通过如下命令认证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如果设置了密码则需要先通过如下命令认证"}},[a._v("#")]),a._v(" 如果设置了密码则需要先通过如下命令认证")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("auth password\n1\n")])])]),e("h3",{attrs:{id:"设置是否为命令重命名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置是否为命令重命名"}},[a._v("#")]),a._v(" 设置是否为命令重命名")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n")])])]),e("p",[a._v("或者通过以下设置直接警用某些命令")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('rename-command CONFIG ""\n')])])]),e("p",[a._v("请注意：改变命令名字被记录到AOF文件或被传送到从服务器可能产生问题。")]),a._v(" "),e("h2",{attrs:{id:"_8-clients-客户端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-clients-客户端"}},[a._v("#")]),a._v(" 8. CLIENTS(客户端)")]),a._v(" "),e("h3",{attrs:{id:"设置可以同时连接的最大客户端数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置可以同时连接的最大客户端数"}},[a._v("#")]),a._v(" 设置可以同时连接的最大客户端数")]),a._v(" "),e("p",[a._v("默认为10000，一旦达到了最大连接数，Redis会关闭所有先的连接请求，并且发送错误日志"),e("code",[a._v("max number of clients reached")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("maxclients 10000\n")])])]),e("h2",{attrs:{id:"_9-memory-management-内存管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-memory-management-内存管理"}},[a._v("#")]),a._v(" 9. MEMORY MANAGEMENT(内存管理)")]),a._v(" "),e("h3",{attrs:{id:"设置最大使用内存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置最大使用内存"}},[a._v("#")]),a._v(" 设置最大使用内存")]),a._v(" "),e("p",[a._v("不要使用比设置的上限更多的内存。\n一旦内存使用达到上限，Redis会根据选定的回收策略删除key（参见：maxmemmory-policy）")]),a._v(" "),e("p",[a._v("如果Redis根据回收策略不能够删除key，Redis则会只处理读请求(比如get)，而写请求会直接报错(SET、LPUSH等等)")]),a._v(" "),e("p",[a._v("注意：")]),a._v(" "),e("p",[a._v('总之，如果你需要附加多个slave，建议你设置一个稍小maxmemory限制，这样系统就会有空闲的内存作为slave的输出缓存区(但是如果最大内存策略设置为"noeviction"的话就没必要了)')]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("maxmemory <bytes>\n1\n")])])]),e("h3",{attrs:{id:"内存管理策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内存管理策略"}},[a._v("#")]),a._v(" 内存管理策略")]),a._v(" "),e("p",[a._v("当内存达到最大时，如何删除key，根据以下策略")]),a._v(" "),e("ol",[e("li",[a._v("volatile-lru -> 根据LRU算法只删除设置过过期时间的key")]),a._v(" "),e("li",[a._v("allkeys-lru -> 根据LRU算法删除任何key")]),a._v(" "),e("li",[a._v("allkeys-lfu -> 根据LFU算法删除任何key")]),a._v(" "),e("li",[a._v("allkeys-random -> 随机移除任何key")]),a._v(" "),e("li",[a._v("volatile-ttl -> 移除最近刚过期的key")]),a._v(" "),e("li",[a._v("noeviction -> 不移除任何key，只返回一个写错误")])]),a._v(" "),e("p",[e("strong",[a._v("LRU means Least Recently Used\nLFU means Least Frequently Used")])]),a._v(" "),e("p",[a._v("系统默认的内存管理策略：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("maxmemory-policy noeviction\n")])])]),e("h3",{attrs:{id:"设置内存管理检查策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置内存管理检查策略"}},[a._v("#")]),a._v(" 设置内存管理检查策略")]),a._v(" "),e("p",[a._v("LRU和最小TTL算法的实现都不是很精确，但是很接近算法（为了省内存），所以你可以用样本量做检测。")]),a._v(" "),e("p",[a._v("例如：默认Redis会检查5个key然后取最旧的那个，你可以通过下面的配置指令来设置样本的个数。默认值为5，数字越大结果越精确但是会消耗更多CPU。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("maxmemory-samples 5\n")])])]),e("h3",{attrs:{id:"设置slave是否忽略最大内存限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置slave是否忽略最大内存限制"}},[a._v("#")]),a._v(" 设置slave是否忽略最大内存限制")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("replica-ignore-maxmemory yes\n")])])]),e("h2",{attrs:{id:"_10-lazy-freeing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-lazy-freeing"}},[a._v("#")]),a._v(" 10 .LAZY FREEING")]),a._v(" "),e("p",[a._v("redis删除key有两个方法")]),a._v(" "),e("ol",[e("li",[e("code",[a._v("DEL")]),a._v("，该命令是一个阻塞式。服务器停止处理新的命令，以便以同步方式回收与对象关联的所有内存，如果被删除的key与小对象相关联，则DEL命令需要时间和其他redis命令一样短，基本上属于O(1) or O(log_N)。相反，如果key关联的对象较大，则执行该命令所需时间较长。")]),a._v(" "),e("li",[a._v("非阻塞命令。"),e("code",[a._v("UNLINK (non blocking DEL)、FLUSHALL、FLUSHDB")]),a._v(" 执行该操作需要常量的时间，其他线程会在后台增量的释放内存。")])]),a._v(" "),e("p",[a._v("上述的命令都是用户控制的，但是redis服务器在执行其他命令时可能会触发"),e("code",[a._v("DEL")]),a._v("或者"),e("code",[a._v("flush")]),a._v("，以下是几种常见的场景：")]),a._v(" "),e("ol",[e("li",[a._v("由于最大内存策略，超过最大内存时为了给新数据提供内存，会删除key。")]),a._v(" "),e("li",[a._v("key过期而造成的删除。")]),a._v(" "),e("li",[a._v("由于存储一些已经存在的key而造成的删除。比如"),e("code",[a._v("RENAME")]),a._v("命令，可能会删除旧的key。")]),a._v(" "),e("li",[a._v("在主从复制期间，当副本与其主服务器执行完全重新同步时，将删除整个数据库的内容，以便加载刚刚传输的RDB文件。")])]),a._v(" "),e("p",[a._v("上述的四个操作删除操作都是阻塞式的，可以在配置文件中为每种情况配置非阻塞式的删除操作。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("lazyfree-lazy-eviction no\nlazyfree-lazy-expire no\nlazyfree-lazy-server-del no\nreplica-lazy-flush no\n")])])]),e("h2",{attrs:{id:"_11-append-only-mode-aof方式持久化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-append-only-mode-aof方式持久化"}},[a._v("#")]),a._v(" 11. APPEND ONLY MODE(AOF方式持久化)")]),a._v(" "),e("p",[a._v("默认情况下，Redis以异步方式将数据集存储到磁盘上。这种模式在很多应用里已经足够好，但Redis进程出问题或断电时可能造成一段时间的写操作丢失(这取决于配置的save指令)。")]),a._v(" "),e("p",[a._v("AOF是一种提供了更可靠的替代持久化模式，例如使用默认的数据写入文件策略（参见后面的配置）。在遇到像服务器断电或单写情况下Redis自身进程出问题但操作系统仍正常运行等突发事件时，Redis能只丢失1秒的写操作。")]),a._v(" "),e("p",[a._v("AOF和RDB持久化能同时启动并且不会有问题。如果AOF开启，那么在启动时Redis将加载AOF文件，它更能保证数据的可靠性，如果aof文件损坏，则redis则会启动失败。")]),a._v(" "),e("h3",{attrs:{id:"开启aof"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开启aof"}},[a._v("#")]),a._v(" 开启AOF")]),a._v(" "),e("p",[a._v("可以通过以下方式开启AOF")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("appendonly yes\n")])])]),e("h3",{attrs:{id:"设置aof文件名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置aof文件名"}},[a._v("#")]),a._v(" 设置aof文件名")]),a._v(" "),e("p",[a._v("默认为"),e("code",[a._v("appendonly.aof")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('appendfilename "appendonly.aof"\n')])])]),e("h3",{attrs:{id:"设置备份数据到磁盘的频率"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置备份数据到磁盘的频率"}},[a._v("#")]),a._v(" 设置备份数据到磁盘的频率")]),a._v(" "),e("p",[a._v("fsync() 系统调用告诉操作系统把数据写到磁盘上，而不是等更多的数据进入输出缓冲区。有些操作系统会真的把数据马上刷到磁盘上；有些则会尽快去尝试这么做。")]),a._v(" "),e("p",[a._v("Redis支持三种不同的模式：")]),a._v(" "),e("ol",[e("li",[a._v("no：不要立刻存储，只有在操作系统需要刷的时候再存储。比较快。")]),a._v(" "),e("li",[a._v("always：每次写操作都立刻写入到aof文件。慢，但是最安全。")]),a._v(" "),e("li",[a._v("everysec：每秒写一次。折中方案。")])]),a._v(" "),e("p",[a._v("默认的 “everysec” 通常来说能在速度和数据安全性之间取得比较好的平衡。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("appendfsync always\n\nappendfsync everysec\n\nappendfsync no\n")])])]),e("h3",{attrs:{id:"同步时重写"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同步时重写"}},[a._v("#")]),a._v(" 同步时重写")]),a._v(" "),e("p",[a._v("如果AOF的同步策略设置成 “always” 或者 “everysec”，并且后台的存储进程（后台存储或写入AOF 日志）会产生很多磁盘I/O开销。某些Linux的配置下会使Redis因为 fsync()系统调用而阻塞很久。注意，目前对这个情况还没有完美修正，甚至不同线程的 fsync() 会阻塞我们同步的write(2)调用。")]),a._v(" "),e("p",[a._v("为了缓解这个问题，可以用下面这个选项。它可以在 "),e("code",[a._v("BGSAVE")]),a._v(" 或"),e("code",[a._v("BGREWRITEAOF")]),a._v(" 处理时阻止"),e("code",[a._v("fsync()")]),a._v("。")]),a._v(" "),e("p",[a._v("这就意味着如果有子进程在进行保存操作，那么"),e("code",[a._v("Redis")]),a._v('就处于"不可同步"的状态。这实际上是说，在最差的情况下可能会丢掉30秒钟的日志数据。（默认'),e("code",[a._v("Linux")]),a._v("设定）")]),a._v(" "),e("p",[a._v('如果把这个设置成"yes"带来了延迟问题，保存持久数据的最安全的方式将下面命令设置为no，')]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("no-appendfsync-on-rewrite no\n1\n")])])]),e("h3",{attrs:{id:"何时自动重写aof文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#何时自动重写aof文件"}},[a._v("#")]),a._v(" 何时自动重写AOF文件")]),a._v(" "),e("p",[a._v("如果AOF日志文件增大到指定百分比，Redis能够通过 "),e("code",[a._v("BGREWRITEAOF")]),a._v(" 自动重写AOF日志文件。")]),a._v(" "),e("p",[a._v("工作原理：Redis记住上次重写时AOF文件的大小（如果重启后还没有写操作，就直接用启动时的AOF大小）")]),a._v(" "),e("p",[a._v("这个基准大小和当前大小做比较。如果当前大小超过指定比例，就会触发重写操作。你还需要指定被重写日志的最小内存，这样有利于避免达到指定百分比但仍然很小的情况还要重写。")]),a._v(" "),e("p",[a._v("指定百分比为0时，会禁用AOF自动重写特性。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("auto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\n")])])]),e("h3",{attrs:{id:"被截断的aof文件是否允许启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#被截断的aof文件是否允许启动"}},[a._v("#")]),a._v(" 被截断的aof文件是否允许启动")]),a._v(" "),e("p",[a._v('如果设置为yes，如果一个因异常被截断的AOF文件被redis启动时加载进内存，redis将会发送日志通知用户。如果设置为no，redis将会拒绝启动。此时需要用"redis-check-aof"工具修复文件。')]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("aof-load-truncated yes\n1\n")])])]),e("h2",{attrs:{id:"_12-lua脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-lua脚本"}},[a._v("#")]),a._v(" 12. LUA脚本")]),a._v(" "),e("p",[a._v("Lua脚本的最长执行时间（以毫秒为单位）")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("lua-time-limit 5000\n")])])]),e("h2",{attrs:{id:"_13-redis-cluster-redis集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13-redis-cluster-redis集群"}},[a._v("#")]),a._v(" 13. REDIS CLUSTER（REDIS集群）")]),a._v(" "),e("h3",{attrs:{id:"是否开启集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#是否开启集群"}},[a._v("#")]),a._v(" 是否开启集群")]),a._v(" "),e("p",[a._v("正常的Redis实例不会成为Redis集群的一部分。只有开启了以下选项，redis才能成为集群服务的一部分")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cluster-enabled yes\n")])])]),e("h3",{attrs:{id:"设置集群的配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置集群的配置文件"}},[a._v("#")]),a._v(" 设置集群的配置文件")]),a._v(" "),e("p",[a._v("每个集群节点都有一个集群配置文件，配置redis自动生成的集群配置文件名。确保同一系统中运行的各redis实例该配置文件不要重名。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cluster-config-file nodes-6379.conf\n1\n")])])]),e("h3",{attrs:{id:"集群节点超时毫秒数。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集群节点超时毫秒数。"}},[a._v("#")]),a._v(" 集群节点超时毫秒数。")]),a._v(" "),e("p",[a._v("超时的节点将被视为不可用状态。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cluster-node-timeout 15000\n")])])]),e("p",[a._v("如果数据太旧，集群中的不可用master的slave节点会避免成为备用master。如果slave和master失联时间超过:")]),a._v(" "),e("p",[e("code",[a._v("(node-timeout * slave-validity-factor) + repl-ping-slave-period")]),a._v("则不会被提升为master。")]),a._v(" "),e("p",[e("em",[a._v("如node-timeout为30秒，slave-validity-factor为10, 默认default repl-ping-slave-period为10秒,失联时间超过310秒slave就不会成为master。")])]),a._v(" "),e("p",[a._v("较大的slave-validity-factor值可能允许包含过旧数据的slave成为master，同时较小的值可能会阻止集群选举出新master")]),a._v(" "),e("p",[a._v("为了达到最大限度的高可用性，可以设置为0，即slave不管和master失联多久都可以提升为master")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cluster-replica-validity-factor 10\n")])])]),e("h3",{attrs:{id:"设置在工作slave为多少个的时候可以提升为master"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置在工作slave为多少个的时候可以提升为master"}},[a._v("#")]),a._v(" 设置在工作slave为多少个的时候可以提升为master")]),a._v(" "),e("p",[a._v("只有在之前master有其它指定数量的工作状态下的slave节点时，slave节点才能提升为master。默认为1（即该集群至少有3个节点，1 master＋2 slaves，master宕机，仍有另外1个slave的情况下其中1个slave可以提升）")]),a._v(" "),e("p",[a._v("测试环境可设置为0，生成环境中至少设置为1")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cluster-migration-barrier 1\n")])])]),e("h3",{attrs:{id:"自动检测恢复机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动检测恢复机制"}},[a._v("#")]),a._v(" 自动检测恢复机制")]),a._v(" "),e("p",[a._v("默认情况下如果redis集群如果检测到至少有1个hash slot不可用，集群将停止查询数据。")]),a._v(" "),e("p",[a._v("如果所有slot恢复则集群自动恢复。")]),a._v(" "),e("p",[a._v("如果需要剩余集群部分可用情况下仍可提供查询服务，设置为no。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cluster-require-full-coverage yes\n")])])]),e("h2",{attrs:{id:"_14-cluster-docker-nat-support"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_14-cluster-docker-nat-support"}},[a._v("#")]),a._v(" 14. CLUSTER DOCKER/NAT support")]),a._v(" "),e("p",[a._v("在某些部署中，Redis群集节点地址发现失败，因为地址是NAT或由于端口被转发（典型情况是Docker和其他容器）。")]),a._v(" "),e("p",[a._v("为了保证在这种环境下redis集群可用，一个静态配置使每个节点都需要知道它的公共地址。 以下两个选项用于此范围，并且是：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(" * cluster-announce-ip\n * cluster-announce-port\n * cluster-announce-bus-port\n123\n")])])]),e("p",[a._v("如果未使用上述选项，则将使用正常的Redis群集自动检测。")]),a._v(" "),e("p",[a._v("请注意，重新映射时，总线端口可能不在固定偏移量处客户端端口+ 10000，因此您可以指定任何端口和总线端口如何重新映射它们。 如果未设置总线端口，则固定偏移量为通常会使用10000。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cluster-announce-ip 10.1.1.5\ncluster-announce-port 6379\ncluster-announce-bus-port 6380\n")])])]),e("h2",{attrs:{id:"_15-慢查询日志-slow-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15-慢查询日志-slow-log"}},[a._v("#")]),a._v(" 15. 慢查询日志(SLOW LOG)")]),a._v(" "),e("p",[a._v("慢查询日志记录超过特定时间的执行命令，执行时间不包括I/O操作的时间，比如：连接客户端、返回响应等等，而是命令真正的执行时间。\nredis中慢查询日志配置参数包括两个，一个是判断Redis执行的时间，单位是微秒；另一个参数是慢查询日志记录的长度，类似于一个队列，新的记录被插入时会删除最老的日志。")]),a._v(" "),e("ol",[e("li",[a._v("redis查询执行的时间。单位微秒")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("slowlog-log-slower-than 10000\n")])])]),e("ol",[e("li",[a._v("日志长度的大小。可以通过"),e("code",[a._v("SLOWLOG RESET")]),a._v("重置")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("slowlog-max-len 128\n")])])]),e("h2",{attrs:{id:"_16-latency-monitor-延时监控"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_16-latency-monitor-延时监控"}},[a._v("#")]),a._v(" 16.LATENCY MONITOR(延时监控)")]),a._v(" "),e("p",[a._v("系统仅记录在等于或大于通过指定的毫秒数量的时间内执行的操作latency-monitor-threshold配置指令。 当其值设置为零时，将关闭延迟监视器。")]),a._v(" "),e("p",[a._v("默认情况下关闭延时监控，")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("latency-monitor-threshold 0\n1\n")])])]),e("h2",{attrs:{id:"_17-event-notification-事件通知"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_17-event-notification-事件通知"}},[a._v("#")]),a._v(" 17. EVENT NOTIFICATION（事件通知）")]),a._v(" "),e("p",[a._v("主要是用于订阅与发布。")]),a._v(" "),e("p",[a._v("一旦key值发生变化时，Redis可以通知 Pub/Sub客户端。\n如果键值空间通知开启时，可以通过Pub/Sub两种方式发布信息：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(" PUBLISH __keyspace@0__:foo del\n PUBLISH __keyevent@0__:del foo\n12\n")])])]),e("p",[a._v("可以在一组类中选择Redis进行事件的通知，每个类都由一个字符标识：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('#  K     Keyspace events, published with __keyspace@<db>__ prefix.\n#  E     Keyevent events, published with __keyevent@<db>__ prefix.\n#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...\n#  $     String commands\n#  l     List commands\n#  s     Set commands\n#  h     Hash commands\n#  z     Sorted set commands\n#  x     Expired events (events generated every time a key expires)\n#  e     Evicted events (events generated when a key is evicted for maxmemory)\n#  A     Alias for g$lshzxe, so that the "AKE" string means all the events.\n')])])]),e("h2",{attrs:{id:"_18-advanced-config-高级配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-advanced-config-高级配置"}},[a._v("#")]),a._v(" 18. ADVANCED CONFIG(高级配置)")]),a._v(" "),e("p",[a._v("当哈希值具有少量条目时，使用内存有效数据结构对哈希进行编码，并且最大条目不超过给定阈值。 可以使用以下指令配置这些阈值。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hash-max-ziplist-entries 512\nhash-max-ziplist-value 64\n")])])]),e("p",[a._v("列表也以特殊方式编码以节省大量空间。每个内部列表节点允许的条目数可以指定为固定的最大大小或最大元素数。\n该值一般在-5到-1之间")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("-5: max size: 64 Kb  <-- not recommended for normal workloads\n-4: max size: 32 Kb  <-- not recommended\n-3: max size: 16 Kb  <-- probably not recommended\n-2: max size: 8 Kb   <-- good\n-1: max size: 4 Kb   <-- good\n")])])]),e("p",[a._v("正数表示存储每个列表节点的_exactly_元素数")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("list-max-ziplist-size -2\n")])])]),e("p",[a._v("设置list是否被压缩")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("list-compress-depth 0\n1\n")])])]),e("p",[a._v("不同数值的含义")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(": 所有的list都不压缩\n"),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(": depth "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" means "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"don\'t start compressing until after 1 node into the list,\n    going from either the head or tail"')]),a._v("\n    So: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("head"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("node-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("node-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("node-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("tail"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("head"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("tail"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" will always be uncompressed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" inner nodes will compress.\n"),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(": "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("head"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("next"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("node-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("node-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("node-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("prev"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("tail"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" here means: don't compress "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("head")]),a._v(" or head-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("next or tail-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("prev or tail,\n    but compress all nodes between them.\n"),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(": "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("head"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("next"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("next"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("node-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("node-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("node-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("prev"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("prev"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("tail"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),e("p",[a._v("设置set压缩参数")]),a._v(" "),e("p",[a._v("集合在下面情况下有一个特殊的编码：当一个集合只是在64位有符号整数范围内恰好是基数为10的整数的字符串时")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("set-max-intset-entries "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("512")]),a._v("\n")])])]),e("p",[a._v("设置set多大时开启压缩")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("zset-max-ziplist-entries "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("128")]),a._v("\nzset-max-ziplist-value "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("64")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);