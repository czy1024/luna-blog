(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{726:function(e,a,t){"use strict";t.r(a);var s=t(7),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),t("p",[t("strong",[e._v("仅仅开放远程访问Docker API，这个还不够的，因为会有安全问题。关于这点，Docker有相关的安全机制，参考官方文档"),t("a",{attrs:{href:"https://docs.docker.com/engine/security/https/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Protect the Docker daemon socket"),t("OutboundLink")],1),e._v("，大致就是：生成证书，用来达到验证客户端身份的目的。")])]),e._v(" "),t("p",[e._v("下面是操作步骤：")]),e._v(" "),t("h2",{attrs:{id:"服务器配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务器配置"}},[e._v("#")]),e._v(" 服务器配置")]),e._v(" "),t("h3",{attrs:{id:"_1-创建certs文件夹-用来存放ca私钥和公钥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建certs文件夹-用来存放ca私钥和公钥"}},[e._v("#")]),e._v(" 1. 创建certs文件夹，用来存放CA私钥和公钥")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("mkdir -pv /etc/docker/certs\ncd /etc/docker/certs\n")])])]),t("h3",{attrs:{id:"_2-创建密码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建密码"}},[e._v("#")]),e._v(" 2. 创建密码")]),e._v(" "),t("p",[t("strong",[e._v("需要连续输入两次相同的密码")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("openssl genrsa -aes256 -out ca-key.pem 4096\n")])])]),t("h3",{attrs:{id:"_3-依次输入密码、国家、省、市、组织名称等-除了密码外其他的可以直接回车跳过"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-依次输入密码、国家、省、市、组织名称等-除了密码外其他的可以直接回车跳过"}},[e._v("#")]),e._v(" 3. 依次输入密码、国家、省、市、组织名称等（除了密码外其他的可以直接回车跳过）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("openssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem\n")])])]),t("h3",{attrs:{id:"_4-生成server-key-pem"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-生成server-key-pem"}},[e._v("#")]),e._v(" 4. 生成server-key.pem")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("openssl genrsa -out server-key.pem 4096\n")])])]),t("h3",{attrs:{id:"_5-生成server-csr-把下面的ip换成你自己服务器外网的ip或者域名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-生成server-csr-把下面的ip换成你自己服务器外网的ip或者域名"}},[e._v("#")]),e._v(" 5. 生成server.csr（把下面的IP换成你自己服务器外网的IP或者域名）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('openssl req -subj "/CN=123.123.123.123" -sha256 -new -key server-key.pem -out server.csr\n')])])]),t("h3",{attrs:{id:"_6-配置白名单"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-配置白名单"}},[e._v("#")]),e._v(" 6. 配置白名单")]),e._v(" "),t("p",[t("strong",[e._v("0.0.0.0表示所有ip都可以连接。（这里需要注意，虽然0.0.0.0可以匹配任意，但是仍需要配置你的外网ip和127.0.0.1，否则客户端会连接不上）")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("echo subjectAltName = IP:0.0.0.0,IP:123.123.123.123,IP:127.0.0.1 >> extfile.cnf\n")])])]),t("p",[t("strong",[e._v("或者也可以设置成域名")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("echo subjectAltName = DNS:www.example.com,IP:123.123.123.123,IP:127.0.0.1 >> extfile.cnf\n")])])]),t("h3",{attrs:{id:"_7-将docker守护程序密钥的扩展使用属性设置为仅用于服务器身份验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-将docker守护程序密钥的扩展使用属性设置为仅用于服务器身份验证"}},[e._v("#")]),e._v(" 7. 将Docker守护程序密钥的扩展使用属性设置为仅用于服务器身份验证")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("echo extendedKeyUsage = serverAuth >> extfile.cnf\n")])])]),t("h3",{attrs:{id:"_8-输入之前设置的密码-生成签名证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-输入之前设置的密码-生成签名证书"}},[e._v("#")]),e._v(" 8.输入之前设置的密码，生成签名证书")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("openssl x509 -req -days 365 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem \\\n  -CAcreateserial -out server-cert.pem -extfile extfile.cnf\n")])])]),t("h3",{attrs:{id:"_9、生成供客户端发起远程访问时使用的key-pem"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9、生成供客户端发起远程访问时使用的key-pem"}},[e._v("#")]),e._v(" 9、生成供客户端发起远程访问时使用的key.pem")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("openssl genrsa -out key.pem 4096\n")])])]),t("h3",{attrs:{id:"_10-生成client-csr-把下面的ip换成你自己服务器外网的ip或者域名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-生成client-csr-把下面的ip换成你自己服务器外网的ip或者域名"}},[e._v("#")]),e._v(" 10. 生成client.csr（把下面的IP换成你自己服务器外网的IP或者域名）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('openssl req -subj "/CN=123.123.123.123" -new -key key.pem -out client.csr\n')])])]),t("h3",{attrs:{id:"_11-创建扩展配置文件-把密钥设置为客户端身份验证用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-创建扩展配置文件-把密钥设置为客户端身份验证用"}},[e._v("#")]),e._v(" 11. 创建扩展配置文件，把密钥设置为客户端身份验证用")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("echo extendedKeyUsage = clientAuth > extfile-client.cnf\n")])])]),t("h3",{attrs:{id:"_12-生成cert-pem-输入前面设置的密码-生成签名证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-生成cert-pem-输入前面设置的密码-生成签名证书"}},[e._v("#")]),e._v(" 12. 生成cert.pem，输入前面设置的密码，生成签名证书")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("openssl x509 -req -days 365 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem \\\n  -CAcreateserial -out cert.pem -extfile extfile-client.cnf\n")])])]),t("h3",{attrs:{id:"_13-删除不需要的配置文件和两个证书的签名请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-删除不需要的配置文件和两个证书的签名请求"}},[e._v("#")]),e._v(" 13. 删除不需要的配置文件和两个证书的签名请求")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("rm -v client.csr server.csr extfile.cnf extfile-client.cnf\n")])])]),t("h3",{attrs:{id:"_14-为了防止私钥文件被更改以及被其他用户查看-修改其权限为所有者只读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-为了防止私钥文件被更改以及被其他用户查看-修改其权限为所有者只读"}},[e._v("#")]),e._v(" 14. 为了防止私钥文件被更改以及被其他用户查看，修改其权限为所有者只读")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("chmod -v 0400 ca-key.pem key.pem server-key.pem\n")])])]),t("h3",{attrs:{id:"_15-为了防止-公钥文件被更改-修改其权限为只读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15-为了防止-公钥文件被更改-修改其权限为只读"}},[e._v("#")]),e._v(" 15. 为了防止##### 公钥文件被更改，修改其权限为只读")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("chmod -v 0444 ca.pem server-cert.pem cert.pem\n")])])]),t("h3",{attrs:{id:"_16-修改docker配置-使docker守护程序仅接受来自提供ca信任的证书的客户端的连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16-修改docker配置-使docker守护程序仅接受来自提供ca信任的证书的客户端的连接"}},[e._v("#")]),e._v(" 16. 修改Docker配置，使Docker守护程序仅接受来自提供CA信任的证书的客户端的连接")]),e._v(" "),t("p",[e._v("拷贝安装包单元文件到/etc，这样就不会因为docker升级而被覆盖")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cp /lib/systemd/system/docker.service /etc/systemd/system/docker.service\n")])])]),t("p",[e._v("在"),t("code",[e._v("ExecStart=/usr/bin/dockerd-current \\")]),e._v("下面增加")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("--tlsverify \\\n--tlscacert=/etc/docker/certs/ca.pem \\\n--tlscert=/etc/docker/certs/server-cert.pem \\\n--tlskey=/etc/docker/certs/server-key.pem \\\n-H tcp://0.0.0.0:2376 \\\n-H unix:///var/run/docker.sock \\\n")])])]),t("h3",{attrs:{id:"_17-重新加载daemon并重启docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-重新加载daemon并重启docker"}},[e._v("#")]),e._v(" 17. 重新加载daemon并重启docker")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("systemctl daemon-reload\nsystemctl restart docker\n")])])]),t("h2",{attrs:{id:"客户端配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客户端配置"}},[e._v("#")]),e._v(" 客户端配置")]),e._v(" "),t("h3",{attrs:{id:"_1-创建证书目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建证书目录"}},[e._v("#")]),e._v(" 1. 创建证书目录")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("mkdir -pv ~/.docker/certs/\ncd ~/.docker/certs/\n")])])]),t("h3",{attrs:{id:"_2-将ca-pem-cert-pem-key-pem这3个文件拷贝到当前目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-将ca-pem-cert-pem-key-pem这3个文件拷贝到当前目录"}},[e._v("#")]),e._v(" 2. 将"),t("code",[e._v("ca.pem")]),e._v(" "),t("code",[e._v("cert.pem")]),e._v(" "),t("code",[e._v("key.pem")]),e._v("这3个文件拷贝到当前目录")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("scp ca.pem ./\nscp cert.pem ./\nscp key.pem ./\n")])])]),t("h3",{attrs:{id:"_3-使用docker客户端测试-注意修改证书路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用docker客户端测试-注意修改证书路径"}},[e._v("#")]),e._v(" 3. 使用docker客户端测试（注意修改证书路径）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker --tlsverify \\\n    --tlscacert=/home/alex/.docker/certs/ca.pem \\\n    --tlscert=/home/alex/.docker/certs/cert.pem \\\n    --tlskey=/home/alex/.docker/certs/key.pem \\\n    -H=123.123.123.123:2376 version\n")])])]),t("h3",{attrs:{id:"_4-使用curl测试docker-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用curl测试docker-api"}},[e._v("#")]),e._v(" 4. 使用curl测试Docker API")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("curl https://123.123.123.123:2376/images/json \\\n  --cert ~/.docker/certs/cert.pem \\\n  --key ~/.docker/certs/key.pem \\\n  --cacert ~/.docker/certs/ca.pem\n")])])]),t("h3",{attrs:{id:"_5-配置默认远程调用服务器docker服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-配置默认远程调用服务器docker服务"}},[e._v("#")]),e._v(" 5. 配置默认远程调用服务器docker服务")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 配置~/.zshrc（或者~/.bashrc，根据你的客户端环境而定），在末尾添加以下几行\nexport DOCKER_HOST=tcp://123.123.123.123:2376 DOCKER_TLS_VERIFY=1\nexport DOCKER_CERT_PATH=~/.docker/certs/\n# 然后让加载到当前会话\nsource .zshrc\n# 测试\ndocker ps\n")])])]),t("h4",{attrs:{id:"务必非常小心保管这些key-它们就跟服务器root密码一样重要-众所周知docker是可以进行真实主机提权的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#务必非常小心保管这些key-它们就跟服务器root密码一样重要-众所周知docker是可以进行真实主机提权的"}},[e._v("#")]),e._v(" *"),t("code",[e._v("务必非常小心保管这些key，它们就跟服务器root密码一样重要（众所周知docker是可以进行真实主机提权的）")])])])}),[],!1,null,null,null);a.default=r.exports}}]);